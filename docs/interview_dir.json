[
  {
    "text": "后端 · 类 · 2",
    "itemNums": 1,
    "itemDepthNums": 2,
    "collapsed": true,
    "collapsible": true,
    "key": "interview/backend",
    "items": [
      {
        "text": "Java · 2",
        "itemNums": 1,
        "itemDepthNums": 2,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/backend/java",
        "items": [
          {
            "text": "基础 · 2",
            "itemNums": 2,
            "itemDepthNums": 2,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/backend/java/010base",
            "items": [
              {
                "text": "面向对象特性？",
                "key": "/interview/backend/java/010base/010010_oop",
                "link": "/interview/backend/java/010base/010010_oop"
              },
              {
                "text": "a = a + b 与 a += b 的区别",
                "key": "/interview/backend/java/010base/010020_a_b_difference",
                "link": "/interview/backend/java/010base/010020_a_b_difference"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "text": "基础 · 类 · 125",
    "itemNums": 1,
    "itemDepthNums": 125,
    "collapsed": true,
    "collapsible": true,
    "key": "interview/base",
    "items": [
      {
        "text": "网络 · 125",
        "itemNums": 7,
        "itemDepthNums": 125,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/base/network",
        "items": [
          {
            "text": "基础 · 8",
            "itemNums": 8,
            "itemDepthNums": 8,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/010base",
            "items": [
              {
                "text": "介绍下 OSI 七层模型，每一层的职责？",
                "key": "/interview/base/network/010base/010010_osi_model",
                "link": "/interview/base/network/010base/010010_osi_model"
              },
              {
                "text": "讲一下 TCP/IP 四、五层模型，每一层的职责？",
                "key": "/interview/base/network/010base/010020_tcpip_model",
                "link": "/interview/base/network/010base/010020_tcpip_model"
              },
              {
                "text": "TCP/IP 四、五层，OSI 七层模型有什么区别？",
                "key": "/interview/base/network/010base/010030_osi_model_vs_tcpip_model",
                "link": "/interview/base/network/010base/010030_osi_model_vs_tcpip_model"
              },
              {
                "text": "URL 有哪些组成部分",
                "key": "/interview/base/network/010base/010040_url_constituent_part",
                "link": "/interview/base/network/010base/010040_url_constituent_part"
              },
              {
                "text": "URI 和 URL之间的区别",
                "key": "/interview/base/network/010base/010050_uri_url",
                "link": "/interview/base/network/010base/010050_uri_url"
              },
              {
                "text": "IP 地址和 MAC 地址有什么区别？各自用处？",
                "key": "/interview/base/network/010base/010060_ip_vs_mac",
                "link": "/interview/base/network/010base/010060_ip_vs_mac"
              },
              {
                "text": "IP 地址有哪些分类",
                "key": "/interview/base/network/010base/010070_ip_classification",
                "link": "/interview/base/network/010base/010070_ip_classification"
              },
              {
                "text": "如何理解 CDN？说说实现原理？",
                "key": "/interview/base/network/010base/010080_cdn_and_cdn_source",
                "link": "/interview/base/network/010base/010080_cdn_and_cdn_source"
              }
            ]
          },
          {
            "text": "DNS · 12",
            "itemNums": 12,
            "itemDepthNums": 12,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/020dns",
            "items": [
              {
                "text": "DNS 是什么？",
                "key": "/interview/base/network/020dns/020010_dns",
                "link": "/interview/base/network/020dns/020010_dns"
              },
              {
                "text": "为什么需要 DNS？",
                "key": "/interview/base/network/020dns/020020_why_dns_is_required",
                "link": "/interview/base/network/020dns/020020_why_dns_is_required"
              },
              {
                "text": "DNS 记录和报文",
                "key": "/interview/base/network/020dns/020030_dns_records_and_messages",
                "link": "/interview/base/network/020dns/020030_dns_records_and_messages"
              },
              {
                "text": "介绍下 DNS 获取流程",
                "key": "/interview/base/network/020dns/020040_dns_acquisition_process",
                "link": "/interview/base/network/020dns/020040_dns_acquisition_process"
              },
              {
                "text": "介绍下 DNS 完整的解析流程?",
                "key": "/interview/base/network/020dns/020050_dns_analysis_process",
                "link": "/interview/base/network/020dns/020050_dns_analysis_process"
              },
              {
                "text": "介绍下 DNS 的迭代查询与递归查询",
                "key": "/interview/base/network/020dns/020060_dns_iterative_and_recursive_queries",
                "link": "/interview/base/network/020dns/020060_dns_iterative_and_recursive_queries"
              },
              {
                "text": "什么是域名缓存？",
                "key": "/interview/base/network/020dns/020070_domain_name_cache",
                "link": "/interview/base/network/020dns/020070_domain_name_cache"
              },
              {
                "text": "DNS解析可优化吗，为什么优化又怎样优化？",
                "key": "/interview/base/network/020dns/020080_dns_optimization",
                "link": "/interview/base/network/020dns/020080_dns_optimization"
              },
              {
                "text": "DNS 缓存的 TTL 是什么",
                "key": "/interview/base/network/020dns/020090_dns_ttl",
                "link": "/interview/base/network/020dns/020090_dns_ttl"
              },
              {
                "text": "DNS 负载均衡",
                "key": "/interview/base/network/020dns/020100_dns_load_balancing",
                "link": "/interview/base/network/020dns/020100_dns_load_balancing"
              },
              {
                "text": "介绍下 DNS 劫持实现思路？",
                "key": "/interview/base/network/020dns/020110_dns_hijacking",
                "link": "/interview/base/network/020dns/020110_dns_hijacking"
              },
              {
                "text": "介绍下 DNS 为何同时使用 TCP 和 UDP 协议？",
                "key": "/interview/base/network/020dns/020120_dns_use_tcp_and_udp",
                "link": "/interview/base/network/020dns/020120_dns_use_tcp_and_udp"
              }
            ]
          },
          {
            "text": "HTTP / HTTPS · 50",
            "itemNums": 50,
            "itemDepthNums": 50,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/030httphttps",
            "items": [
              {
                "text": "HTTP1.0/1.1/2.0 的区别?",
                "key": "/interview/base/network/030httphttps/030010_http1_http1.1_http2",
                "link": "/interview/base/network/030httphttps/030010_http1_http1.1_http2"
              },
              {
                "text": "为什么 HTTP1.1 不能实现多路复用",
                "key": "/interview/base/network/030httphttps/030020_http1.1_multiplexing",
                "link": "/interview/base/network/030httphttps/030020_http1.1_multiplexing"
              },
              {
                "text": "简单讲解一下 HTTP2 的多路复用",
                "key": "/interview/base/network/030httphttps/030030_http2_multiplexing",
                "link": "/interview/base/network/030httphttps/030030_http2_multiplexing"
              },
              {
                "text": "HTTP1.1 是如何复用 tcp 连接的？",
                "key": "/interview/base/network/030httphttps/030040_http1.1_tcp_multiplexing",
                "link": "/interview/base/network/030httphttps/030040_http1.1_tcp_multiplexing"
              },
              {
                "text": "介绍下 HTTP1.0/1.1/2.0 的队头阻塞问题",
                "key": "/interview/base/network/030httphttps/030050_head_of_line_blocking",
                "link": "/interview/base/network/030httphttps/030050_head_of_line_blocking"
              },
              {
                "text": "介绍下 HTTP 3.0，出现原因",
                "key": "/interview/base/network/030httphttps/030060_http3",
                "link": "/interview/base/network/030httphttps/030060_http3"
              },
              {
                "text": "什么是 HTTP 3.0 中的底层支持协议 QUIC",
                "key": "/interview/base/network/030httphttps/030070_http3_quic",
                "link": "/interview/base/network/030httphttps/030070_http3_quic"
              },
              {
                "text": "HTTP2 的头部压缩算法是怎样的？",
                "key": "/interview/base/network/030httphttps/030080_http2_head_compression_algorithm",
                "link": "/interview/base/network/030httphttps/030080_http2_head_compression_algorithm"
              },
              {
                "text": "HTTP 请求报文的是什么样？",
                "key": "/interview/base/network/030httphttps/030090_htttp_request_message",
                "link": "/interview/base/network/030httphttps/030090_htttp_request_message"
              },
              {
                "text": "HTTP 常见的请求头有哪些? 作用？",
                "key": "/interview/base/network/030httphttps/030100_http_request_header",
                "link": "/interview/base/network/030httphttps/030100_http_request_header"
              },
              {
                "text": "与缓存相关的 HTTP 请求头有哪些",
                "key": "/interview/base/network/030httphttps/030110_http_cache_request_header",
                "link": "/interview/base/network/030httphttps/030110_http_cache_request_header"
              },
              {
                "text": "HTTP 响应报文的是什么样？",
                "key": "/interview/base/network/030httphttps/030120_http_response_message",
                "link": "/interview/base/network/030httphttps/030120_http_response_message"
              },
              {
                "text": "HTTP 请求的完整工作过程",
                "key": "/interview/base/network/030httphttps/030130_http_request_working_process",
                "link": "/interview/base/network/030httphttps/030130_http_request_working_process"
              },
              {
                "text": "HTTP 协议的性能怎么样",
                "key": "/interview/base/network/030httphttps/030140_performance_of_http_protocol",
                "link": "/interview/base/network/030httphttps/030140_performance_of_http_protocol"
              },
              {
                "text": "HTTP 协议的优点和缺点",
                "key": "/interview/base/network/030httphttps/030150_advantages_and_disadvantages_of_http_protocol",
                "link": "/interview/base/network/030httphttps/030150_advantages_and_disadvantages_of_http_protocol"
              },
              {
                "text": "HTTP 都有哪些请求方法？",
                "key": "/interview/base/network/030httphttps/030160_http_request_method",
                "link": "/interview/base/network/030httphttps/030160_http_request_method"
              },
              {
                "text": "常见的 HTTP 请求头和响应头",
                "key": "/interview/base/network/030httphttps/030170_http_request_and_response_headers",
                "link": "/interview/base/network/030httphttps/030170_http_request_and_response_headers"
              },
              {
                "text": "GET 和 POST 的区别？应用场景？",
                "key": "/interview/base/network/030httphttps/030180_get_post",
                "link": "/interview/base/network/030httphttps/030180_get_post"
              },
              {
                "text": "POST 和 PUT 请求的区别",
                "key": "/interview/base/network/030httphttps/030190_put_post",
                "link": "/interview/base/network/030httphttps/030190_put_post"
              },
              {
                "text": "POST 方法真的不能被缓存吗",
                "key": "/interview/base/network/030httphttps/030200_post_cache",
                "link": "/interview/base/network/030httphttps/030200_post_cache"
              },
              {
                "text": "post 请求什么时候用 form data 什么时候用 request payload",
                "key": "/interview/base/network/030httphttps/030210_post_formdata_or_request_payload",
                "link": "/interview/base/network/030httphttps/030210_post_formdata_or_request_payload"
              },
              {
                "text": "GET 请求中 URL 编码的意义",
                "key": "/interview/base/network/030httphttps/030220_get_url_coding",
                "link": "/interview/base/network/030httphttps/030220_get_url_coding"
              },
              {
                "text": "GET 方法 URL 长度限制的原因",
                "key": "/interview/base/network/030httphttps/030230_get_url_length_limit",
                "link": "/interview/base/network/030httphttps/030230_get_url_length_limit"
              },
              {
                "text": "介绍 OPTIONS 请求方法，使用场景？",
                "key": "/interview/base/network/030httphttps/030240_options",
                "link": "/interview/base/network/030httphttps/030240_options"
              },
              {
                "text": "什么是简单请求和非简单请求？",
                "key": "/interview/base/network/030httphttps/030250_simple_and_non_simple_requests",
                "link": "/interview/base/network/030httphttps/030250_simple_and_non_simple_requests"
              },
              {
                "text": "HTTP 请求在交互过程中如果数据传送完了，还不想断开连接怎么办，怎么维持？",
                "key": "/interview/base/network/030httphttps/030260_http_do_not_want_to_disconnect",
                "link": "/interview/base/network/030httphttps/030260_http_do_not_want_to_disconnect"
              },
              {
                "text": "HTTP 如何实现长链接？在什么时候会超时？",
                "key": "/interview/base/network/030httphttps/030270_http_long_link",
                "link": "/interview/base/network/030httphttps/030270_http_long_link"
              },
              {
                "text": "HTTP 长连接和短连接使用场景分别是什么",
                "key": "/interview/base/network/030httphttps/030280_http_long_and_short_connections",
                "link": "/interview/base/network/030httphttps/030280_http_long_and_short_connections"
              },
              {
                "text": "什么是 Cookie、Session，有什么区别？",
                "key": "/interview/base/network/030httphttps/030290_cookie_session",
                "link": "/interview/base/network/030httphttps/030290_cookie_session"
              },
              {
                "text": "Cookie、Session 对于 HTTP 有什么用？",
                "key": "/interview/base/network/030httphttps/030300_what_are_cookies_and_sessions_used_for_http",
                "link": "/interview/base/network/030httphttps/030300_what_are_cookies_and_sessions_used_for_http"
              },
              {
                "text": "cookie 和 token 都存放在 header 中，为什么不会劫持 token？",
                "key": "/interview/base/network/030httphttps/030310_hijacking_token_and_cookie",
                "link": "/interview/base/network/030httphttps/030310_hijacking_token_and_cookie"
              },
              {
                "text": "session 怎么消除",
                "key": "/interview/base/network/030httphttps/030320_how_to_eliminate_a_session",
                "link": "/interview/base/network/030httphttps/030320_how_to_eliminate_a_session"
              },
              {
                "text": "请求中 forward 和 redirect 的区别？",
                "key": "/interview/base/network/030httphttps/030330_forward_redirect",
                "link": "/interview/base/network/030httphttps/030330_forward_redirect"
              },
              {
                "text": "谈谈对 Keep-Alive 和非 Keep-Alive 的理解？",
                "key": "/interview/base/network/030httphttps/030340_http_keepalive",
                "link": "/interview/base/network/030httphttps/030340_http_keepalive"
              },
              {
                "text": "页面有多张图片，HTTP 是怎样的加载表现？",
                "key": "/interview/base/network/030httphttps/030350_http_loading_images",
                "link": "/interview/base/network/030httphttps/030350_http_loading_images"
              },
              {
                "text": "HTTP 常见的状态码有哪些，使用场景？",
                "key": "/interview/base/network/030httphttps/030360_http_status_code",
                "link": "/interview/base/network/030httphttps/030360_http_status_code"
              },
              {
                "text": "HTTP 状态吗 301 和 302 区别，有哪些用途？",
                "key": "/interview/base/network/030httphttps/030370_http_status_code_301_302",
                "link": "/interview/base/network/030httphttps/030370_http_status_code_301_302"
              },
              {
                "text": "HTTP 状态码 304 是什么，网页中是多好还是少好？",
                "key": "/interview/base/network/030httphttps/030380__http_status_code_304",
                "link": "/interview/base/network/030httphttps/030380__http_status_code_304"
              },
              {
                "text": "同样是重定向，308，307，303，302，301 的区别？",
                "key": "/interview/base/network/030httphttps/030390__http_status_code_301_302_303_307_308",
                "link": "/interview/base/network/030httphttps/030390__http_status_code_301_302_303_307_308"
              },
              {
                "text": "什么是 HTTPS ",
                "key": "/interview/base/network/030httphttps/030400_https",
                "link": "/interview/base/network/030httphttps/030400_https"
              },
              {
                "text": "HTTP 和 HTTPS 的区别",
                "key": "/interview/base/network/030httphttps/030410_http_https",
                "link": "/interview/base/network/030httphttps/030410_http_https"
              },
              {
                "text": "什么是 TLS/SSL，工作原理？",
                "key": "/interview/base/network/030httphttps/030420_tls_ssl",
                "link": "/interview/base/network/030httphttps/030420_tls_ssl"
              },
              {
                "text": "对称加密与非对称加密的区别",
                "key": "/interview/base/network/030httphttps/030430_symmetric_encryption_and_asymmetric_encryption",
                "link": "/interview/base/network/030httphttps/030430_symmetric_encryption_and_asymmetric_encryption"
              },
              {
                "text": "什么是数字签名？",
                "key": "/interview/base/network/030httphttps/030440_digital_signature",
                "link": "/interview/base/network/030httphttps/030440_digital_signature"
              },
              {
                "text": "什么是数字证书？",
                "key": "/interview/base/network/030httphttps/030450_digital_certificate",
                "link": "/interview/base/network/030httphttps/030450_digital_certificate"
              },
              {
                "text": "为什么需要 CA 机构对证书签名",
                "key": "/interview/base/network/030httphttps/030460_ca_signature",
                "link": "/interview/base/network/030httphttps/030460_ca_signature"
              },
              {
                "text": "为什么说 HTTPS 比 HTTP 安全? HTTPS 是如何保证安全的",
                "key": "/interview/base/network/030httphttps/030470_how_to_ensure_safety_for_https",
                "link": "/interview/base/network/030httphttps/030470_how_to_ensure_safety_for_https"
              },
              {
                "text": "介绍 HTTPS 握手过程",
                "key": "/interview/base/network/030httphttps/030480_https_handshake_process",
                "link": "/interview/base/network/030httphttps/030480_https_handshake_process"
              },
              {
                "text": "HTTPS 请求的完整工作过程？",
                "key": "/interview/base/network/030httphttps/030490_https_request_working_process",
                "link": "/interview/base/network/030httphttps/030490_https_request_working_process"
              },
              {
                "text": "HTTPS 的优缺点？",
                "key": "/interview/base/network/030httphttps/030500_https_excellent_vacancy",
                "link": "/interview/base/network/030httphttps/030500_https_excellent_vacancy"
              }
            ]
          },
          {
            "text": "TCP / UDP · 30",
            "itemNums": 30,
            "itemDepthNums": 30,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/040tcpudp",
            "items": [
              {
                "text": "TCP、IP、TCP/IP分不清楚？有什么区别",
                "key": "/interview/base/network/040tcpudp/040010_tcp_ip_tcpip",
                "link": "/interview/base/network/040tcpudp/040010_tcp_ip_tcpip"
              },
              {
                "text": "什么是 TCP 协议",
                "key": "/interview/base/network/040tcpudp/040020_tcp",
                "link": "/interview/base/network/040tcpudp/040020_tcp"
              },
              {
                "text": "TCP 和 HTTP 的区别定义",
                "key": "/interview/base/network/040tcpudp/040030_tcp_vs_http",
                "link": "/interview/base/network/040tcpudp/040030_tcp_vs_http"
              },
              {
                "text": "什么是 UDP 协议",
                "key": "/interview/base/network/040tcpudp/040040_udp",
                "link": "/interview/base/network/040tcpudp/040040_udp"
              },
              {
                "text": "如何理解 UDP 和 TCP? 区别? 应用场景?",
                "key": "/interview/base/network/040tcpudp/040050_tcp_vs_udp",
                "link": "/interview/base/network/040tcpudp/040050_tcp_vs_udp"
              },
              {
                "text": "什么是 ARP 协议，工作原理？",
                "key": "/interview/base/network/040tcpudp/040060_arp",
                "link": "/interview/base/network/040tcpudp/040060_arp"
              },
              {
                "text": "TCP 的主要特点是什么？",
                "key": "/interview/base/network/040tcpudp/040070_tcp_characteristic",
                "link": "/interview/base/network/040tcpudp/040070_tcp_characteristic"
              },
              {
                "text": "UDP 的主要特点是什么？",
                "key": "/interview/base/network/040tcpudp/040080_udp_characteristic",
                "link": "/interview/base/network/040tcpudp/040080_udp_characteristic"
              },
              {
                "text": "UDP 不可靠？如何实现 UDP 可靠传输？",
                "key": "/interview/base/network/040tcpudp/040090_how_to_achieve_reliable_udp_transmission",
                "link": "/interview/base/network/040tcpudp/040090_how_to_achieve_reliable_udp_transmission"
              },
              {
                "text": "介绍 TCP 的重传机制",
                "key": "/interview/base/network/040tcpudp/040100_tcp_retransmission_mechanism",
                "link": "/interview/base/network/040tcpudp/040100_tcp_retransmission_mechanism"
              },
              {
                "text": "介绍 TCP 的拥塞控制",
                "key": "/interview/base/network/040tcpudp/040110_tcp_congestion_control",
                "link": "/interview/base/network/040tcpudp/040110_tcp_congestion_control"
              },
              {
                "text": "介绍 TCP 的流量控制机制",
                "key": "/interview/base/network/040tcpudp/040120_tcp_quantity_control",
                "link": "/interview/base/network/040tcpudp/040120_tcp_quantity_control"
              },
              {
                "text": "什么是 ARQ 协议？",
                "key": "/interview/base/network/040tcpudp/040130_arq",
                "link": "/interview/base/network/040tcpudp/040130_arq"
              },
              {
                "text": "什么是停止等待协议？",
                "key": "/interview/base/network/040tcpudp/040140_stop_waiting_for_protocol",
                "link": "/interview/base/network/040tcpudp/040140_stop_waiting_for_protocol"
              },
              {
                "text": "什么是滑动窗口协议？",
                "key": "/interview/base/network/040tcpudp/040150_sliding_window_protocol",
                "link": "/interview/base/network/040tcpudp/040150_sliding_window_protocol"
              },
              {
                "text": "TCP 的可靠传输机制是如何实现的",
                "key": "/interview/base/network/040tcpudp/040160_tcp_reliable_transmission_mechanism",
                "link": "/interview/base/network/040tcpudp/040160_tcp_reliable_transmission_mechanism"
              },
              {
                "text": "介绍下 TCP 的三次握手和四次挥手？",
                "key": "/interview/base/network/040tcpudp/040170_tcp_three_handshakes_and_four_waves",
                "link": "/interview/base/network/040tcpudp/040170_tcp_three_handshakes_and_four_waves"
              },
              {
                "text": "TCP 为什么建立连接是三次，关闭连接确是四次？",
                "key": "/interview/base/network/040tcpudp/040180_why_is_tcp_shaking_hands_three_times_and_waving_hands_four_times",
                "link": "/interview/base/network/040tcpudp/040180_why_is_tcp_shaking_hands_three_times_and_waving_hands_four_times"
              },
              {
                "text": "TCP 为什么需要三次握手？两次不行？",
                "key": "/interview/base/network/040tcpudp/040190_why_is_tcp_feasible_for_two_handshakes",
                "link": "/interview/base/network/040tcpudp/040190_why_is_tcp_feasible_for_two_handshakes"
              },
              {
                "text": "TCP 三次握手过程中可以携带数据吗",
                "key": "/interview/base/network/040tcpudp/040200_can_tcp_triple_handshake_carry_data",
                "link": "/interview/base/network/040tcpudp/040200_can_tcp_triple_handshake_carry_data"
              },
              {
                "text": "TCP 为什么需要四次挥手？三次不行？",
                "key": "/interview/base/network/040tcpudp/040210_is_it_feasible_to_wave_tcp_three_times",
                "link": "/interview/base/network/040tcpudp/040210_is_it_feasible_to_wave_tcp_three_times"
              },
              {
                "text": "TCP 中为什么四次挥手结束 TIME-WAIT 状态必须等待 2MSL 的时间呢？",
                "key": "/interview/base/network/040tcpudp/040220_timewait_wait_for_2msl",
                "link": "/interview/base/network/040tcpudp/040220_timewait_wait_for_2msl"
              },
              {
                "text": "TCP 如果已经建立了连接，但客户端突然故障怎么办？",
                "key": "/interview/base/network/040tcpudp/040230_tcp_establish_connection_client_failure",
                "link": "/interview/base/network/040tcpudp/040230_tcp_establish_connection_client_failure"
              },
              {
                "text": "TCP 保活计时器的作用？",
                "key": "/interview/base/network/040tcpudp/040240_tcp_keep_alive_timer",
                "link": "/interview/base/network/040tcpudp/040240_tcp_keep_alive_timer"
              },
              {
                "text": "TCP 最大连接数限制",
                "key": "/interview/base/network/040tcpudp/040250_tcp_maximum_connections_limit",
                "link": "/interview/base/network/040tcpudp/040250_tcp_maximum_connections_limit"
              },
              {
                "text": "什么是拆包和粘包？怎么解决？",
                "key": "/interview/base/network/040tcpudp/040260_unpacking_and_gluing",
                "link": "/interview/base/network/040tcpudp/040260_unpacking_and_gluing"
              },
              {
                "text": "TCP 粘包是怎么产生的？",
                "key": "/interview/base/network/040tcpudp/040270_how_does_stickiness_occur_for_tcp",
                "link": "/interview/base/network/040tcpudp/040270_how_does_stickiness_occur_for_tcp"
              },
              {
                "text": "什么是 ICMP，ICMP 有哪些应用？",
                "key": "/interview/base/network/040tcpudp/040280_icmp",
                "link": "/interview/base/network/040tcpudp/040280_icmp"
              },
              {
                "text": "什么是洪水攻击（SYN FLOOD）",
                "key": "/interview/base/network/040tcpudp/040290_syn_flood",
                "link": "/interview/base/network/040tcpudp/040290_syn_flood"
              },
              {
                "text": "介绍下 TCP 的队头堵塞问题",
                "key": "/interview/base/network/040tcpudp/040300_tcp_team_leader_blocked",
                "link": "/interview/base/network/040tcpudp/040300_tcp_team_leader_blocked"
              }
            ]
          },
          {
            "text": "Socket · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/050socket",
            "items": [
              {
                "text": "什么是 Socket？",
                "key": "/interview/base/network/050socket/050010_socket",
                "link": "/interview/base/network/050socket/050010_socket"
              },
              {
                "text": "Socket 和 HTTP 区别？",
                "key": "/interview/base/network/050socket/050020_socket_vs_http",
                "link": "/interview/base/network/050socket/050020_socket_vs_http"
              },
              {
                "text": "Socket 和 HTTP 长链接的区别，应用场景？",
                "key": "/interview/base/network/050socket/050030_socket_vs_http_long_link",
                "link": "/interview/base/network/050socket/050030_socket_vs_http_long_link"
              },
              {
                "text": "Socket 属于网络的哪一层",
                "key": "/interview/base/network/050socket/050040_which_layer_of_the_network_does_the_socket_belong_to",
                "link": "/interview/base/network/050socket/050040_which_layer_of_the_network_does_the_socket_belong_to"
              },
              {
                "text": "Socket 通讯过程",
                "key": "/interview/base/network/050socket/050050_socket_communication_process",
                "link": "/interview/base/network/050socket/050050_socket_communication_process"
              },
              {
                "text": "为什么 Socket 需要心跳机制？",
                "key": "/interview/base/network/050socket/050060_socket_heartbeat_mechanism",
                "link": "/interview/base/network/050socket/050060_socket_heartbeat_mechanism"
              },
              {
                "text": "分别介绍短轮询、长轮询、SSE 和 Socket，以及区别？",
                "key": "/interview/base/network/050socket/050070_shortpolling_longpolling_sse_socket",
                "link": "/interview/base/network/050socket/050070_shortpolling_longpolling_sse_socket"
              }
            ]
          },
          {
            "text": "网安 · 14",
            "itemNums": 14,
            "itemDepthNums": 14,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/060security",
            "items": [
              {
                "text": "什么是 HTTP 劫持？",
                "key": "/interview/base/network/060security/060010_what_is_http_hijacking",
                "link": "/interview/base/network/060security/060010_what_is_http_hijacking"
              },
              {
                "text": "如何劫持 https 的请求，提供思路？",
                "key": "/interview/base/network/060security/060020_how_to_hijack_https",
                "link": "/interview/base/network/060security/060020_how_to_hijack_https"
              },
              {
                "text": "什么是 DNS 劫持？",
                "key": "/interview/base/network/060security/060030_what_is_dns_hijacking",
                "link": "/interview/base/network/060security/060030_what_is_dns_hijacking"
              },
              {
                "text": "什么是 SQL 注入攻击",
                "key": "/interview/base/network/060security/060040_what_is_sql_injection_attack",
                "link": "/interview/base/network/060security/060040_what_is_sql_injection_attack"
              },
              {
                "text": "如何防御 SQL 注入攻击",
                "key": "/interview/base/network/060security/060050_how_to_defend_against_sql_injection_attacks",
                "link": "/interview/base/network/060security/060050_how_to_defend_against_sql_injection_attacks"
              },
              {
                "text": "什么是 XSS 攻击？",
                "key": "/interview/base/network/060security/060060_what_is_an_xss_attack",
                "link": "/interview/base/network/060security/060060_what_is_an_xss_attack"
              },
              {
                "text": "如何防御 XSS 攻击？",
                "key": "/interview/base/network/060security/060070_how_to_defend_against_xss_attacks",
                "link": "/interview/base/network/060security/060070_how_to_defend_against_xss_attacks"
              },
              {
                "text": "什么是 CSRF 攻击？",
                "key": "/interview/base/network/060security/060080_what_is_a_csrf_attack",
                "link": "/interview/base/network/060security/060080_what_is_a_csrf_attack"
              },
              {
                "text": "如何防御 CSRF 攻击？",
                "key": "/interview/base/network/060security/060090_how_to_defend_against_csrf_attacks",
                "link": "/interview/base/network/060security/060090_how_to_defend_against_csrf_attacks"
              },
              {
                "text": "什么是中间人攻击？",
                "key": "/interview/base/network/060security/060100_what_is_maninthemiddle_attack",
                "link": "/interview/base/network/060security/060100_what_is_maninthemiddle_attack"
              },
              {
                "text": "如何防范中间人攻击？",
                "key": "/interview/base/network/060security/060110_how_to_prevent_maninthemiddle_attack",
                "link": "/interview/base/network/060security/060110_how_to_prevent_maninthemiddle_attack"
              },
              {
                "text": "网页验证码是干嘛的，是为了解决什么安全问题？",
                "key": "/interview/base/network/060security/060120_website_verification_code",
                "link": "/interview/base/network/060security/060120_website_verification_code"
              },
              {
                "text": "有哪些可能引起前端安全的问题?",
                "key": "/interview/base/network/060security/060130_what_may_cause_frontend_security_issues",
                "link": "/interview/base/network/060security/060130_what_may_cause_frontend_security_issues"
              },
              {
                "text": "网络劫持有哪几种，如何防范？",
                "key": "/interview/base/network/060security/060140_what_are_the_types_of_network_hijacking",
                "link": "/interview/base/network/060security/060140_what_are_the_types_of_network_hijacking"
              }
            ]
          },
          {
            "text": "其他 · 4",
            "itemNums": 4,
            "itemDepthNums": 4,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/base/network/070other",
            "items": [
              {
                "text": "介绍下 JWT 中的 token 如何实现加密",
                "key": "/interview/base/network/070other/070010_jwt_token_encryption",
                "link": "/interview/base/network/070other/070010_jwt_token_encryption"
              },
              {
                "text": "介绍下单点登录 SSO",
                "key": "/interview/base/network/070other/070020_sso",
                "link": "/interview/base/network/070other/070020_sso"
              },
              {
                "text": "列举常用的网络性能优化方法",
                "key": "/interview/base/network/070other/070030_network_performance_optimization",
                "link": "/interview/base/network/070other/070030_network_performance_optimization"
              },
              {
                "text": "地址栏输入 URL 敲下回车后发生了什么?",
                "key": "/interview/base/network/070other/070040_what_happened_when_entering_the_url",
                "link": "/interview/base/network/070other/070040_what_happened_when_entering_the_url"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "text": "大前端 · 类 · 423",
    "itemNums": 6,
    "itemDepthNums": 423,
    "collapsed": true,
    "collapsible": true,
    "key": "interview/frontend",
    "items": [
      {
        "text": "浏览器 · 62",
        "itemNums": 11,
        "itemDepthNums": 62,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/browser",
        "items": [
          {
            "text": "进程&线程 · 12",
            "itemNums": 12,
            "itemDepthNums": 12,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/010processthread",
            "items": [
              {
                "text": "什么是线程？什么是进程？",
                "key": "/interview/frontend/browser/010processthread/010010_process_and_thread",
                "link": "/interview/frontend/browser/010processthread/010010_process_and_thread"
              },
              {
                "text": "线程与进程的区别",
                "key": "/interview/frontend/browser/010processthread/010020_process_and_thread_diff",
                "link": "/interview/frontend/browser/010processthread/010020_process_and_thread_diff"
              },
              {
                "text": "多进程和多线程",
                "key": "/interview/frontend/browser/010processthread/010030_multiprocess_and_multithreading",
                "link": "/interview/frontend/browser/010processthread/010030_multiprocess_and_multithreading"
              },
              {
                "text": "进程之间的通信方式",
                "key": "/interview/frontend/browser/010processthread/010040_process_communication",
                "link": "/interview/frontend/browser/010processthread/010040_process_communication"
              },
              {
                "text": "JS 为什么是单线程，与异步冲突吗",
                "key": "/interview/frontend/browser/010processthread/010050_js_singlethreaded_and_asynchronous",
                "link": "/interview/frontend/browser/010processthread/010050_js_singlethreaded_and_asynchronous"
              },
              {
                "text": "浏览器包含哪些进程",
                "key": "/interview/frontend/browser/010processthread/010060_browser_processes",
                "link": "/interview/frontend/browser/010processthread/010060_browser_processes"
              },
              {
                "text": "为什么浏览器要多进程",
                "key": "/interview/frontend/browser/010processthread/010070_browser_multiprocess",
                "link": "/interview/frontend/browser/010processthread/010070_browser_multiprocess"
              },
              {
                "text": "浏览器渲染进程的线程有哪些",
                "key": "/interview/frontend/browser/010processthread/010080_browser_thread_of_rendering_process",
                "link": "/interview/frontend/browser/010processthread/010080_browser_thread_of_rendering_process"
              },
              {
                "text": "僵尸进程和孤儿进程是什么？",
                "key": "/interview/frontend/browser/010processthread/010090_zombie_and_orphan_process",
                "link": "/interview/frontend/browser/010processthread/010090_zombie_and_orphan_process"
              },
              {
                "text": "死锁产生的原因？ 如果解决死锁的问题？",
                "key": "/interview/frontend/browser/010processthread/010100_deadlock",
                "link": "/interview/frontend/browser/010processthread/010100_deadlock"
              },
              {
                "text": "如何实现浏览器内多个标签页之间的通信?",
                "key": "/interview/frontend/browser/010processthread/010110_browser_multiple_tabs_communication",
                "link": "/interview/frontend/browser/010processthread/010110_browser_multiple_tabs_communication"
              },
              {
                "text": "谈一谈对 Service Worker 的理解",
                "key": "/interview/frontend/browser/010processthread/010120_service_worker",
                "link": "/interview/frontend/browser/010processthread/010120_service_worker"
              }
            ]
          },
          {
            "text": "内存管理 · 1",
            "itemNums": 1,
            "itemDepthNums": 1,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/020memory",
            "items": [
              {
                "text": "什么是堆、栈？",
                "key": "/interview/frontend/browser/020memory/020010_heap_and_stack",
                "link": "/interview/frontend/browser/020memory/020010_heap_and_stack"
              }
            ]
          },
          {
            "text": "组成 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/030form",
            "items": [
              {
                "text": "谈一谈对浏览器的理解",
                "key": "/interview/frontend/browser/030form/030010_browser",
                "link": "/interview/frontend/browser/030form/030010_browser"
              },
              {
                "text": "谈一谈对浏览器内核的理解",
                "key": "/interview/frontend/browser/030form/030020_browser_kernel",
                "link": "/interview/frontend/browser/030form/030020_browser_kernel"
              },
              {
                "text": "常见的浏览器内核有哪些，有什么区别",
                "key": "/interview/frontend/browser/030form/030030_common_browser_kernel",
                "link": "/interview/frontend/browser/030form/030030_common_browser_kernel"
              },
              {
                "text": "常见的浏览器使用的都是哪些内核",
                "key": "/interview/frontend/browser/030form/030040_common_browser_usage_kernel",
                "link": "/interview/frontend/browser/030form/030040_common_browser_usage_kernel"
              },
              {
                "text": "浏览器的主要组成部分是什么",
                "key": "/interview/frontend/browser/030form/030050_browser_main_components",
                "link": "/interview/frontend/browser/030form/030050_browser_main_components"
              }
            ]
          },
          {
            "text": "渲染 · 13",
            "itemNums": 13,
            "itemDepthNums": 13,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/040render",
            "items": [
              {
                "text": "浏览器渲染的完整过程",
                "key": "/interview/frontend/browser/040render/040010_browser_rendering",
                "link": "/interview/frontend/browser/040render/040010_browser_rendering"
              },
              {
                "text": "什么是文档的预解析？",
                "key": "/interview/frontend/browser/040render/040020_pre_parsing_of_documents",
                "link": "/interview/frontend/browser/040render/040020_pre_parsing_of_documents"
              },
              {
                "text": "渲染过程中遇到 JS 文件如何处理？",
                "key": "/interview/frontend/browser/040render/040030_rendering_process_encountered_js",
                "link": "/interview/frontend/browser/040render/040030_rendering_process_encountered_js"
              },
              {
                "text": "JS 阻塞页面加载？为什么？",
                "key": "/interview/frontend/browser/040render/040040_js_blocking_page_loading",
                "link": "/interview/frontend/browser/040render/040040_js_blocking_page_loading"
              },
              {
                "text": "CSS 资源加载会阻塞渲染？怎样优化？",
                "key": "/interview/frontend/browser/040render/040050_css_blocking_page_loading",
                "link": "/interview/frontend/browser/040render/040050_css_blocking_page_loading"
              },
              {
                "text": "什么情况会阻塞渲染？",
                "key": "/interview/frontend/browser/040render/040060_block_rendering",
                "link": "/interview/frontend/browser/040render/040060_block_rendering"
              },
              {
                "text": "什么是回流和重绘以及区别？",
                "key": "/interview/frontend/browser/040render/040070_reflow_and_redraw",
                "link": "/interview/frontend/browser/040render/040070_reflow_and_redraw"
              },
              {
                "text": "什么会引起回流？",
                "key": "/interview/frontend/browser/040render/040080_causing_reflux",
                "link": "/interview/frontend/browser/040render/040080_causing_reflux"
              },
              {
                "text": "如何减少和避免回流重绘？",
                "key": "/interview/frontend/browser/040render/040090_avoid_reflow_redrawing",
                "link": "/interview/frontend/browser/040render/040090_avoid_reflow_redrawing"
              },
              {
                "text": "什么是渲染层合并 (Composite) ?",
                "key": "/interview/frontend/browser/040render/040100_composite",
                "link": "/interview/frontend/browser/040render/040100_composite"
              },
              {
                "text": "什么是普通图层和复合图层？",
                "key": "/interview/frontend/browser/040render/040110_normal_and_composite_layers",
                "link": "/interview/frontend/browser/040render/040110_normal_and_composite_layers"
              },
              {
                "text": "什么是关键渲染路径（CRP），如何优化？",
                "key": "/interview/frontend/browser/040render/040120_critical_rendering_path",
                "link": "/interview/frontend/browser/040render/040120_critical_rendering_path"
              },
              {
                "text": "谈一谈浏览器渲染优化？",
                "key": "/interview/frontend/browser/040render/040130_browser_rendering_optimization",
                "link": "/interview/frontend/browser/040render/040130_browser_rendering_optimization"
              }
            ]
          },
          {
            "text": "缓存 · 6",
            "itemNums": 6,
            "itemDepthNums": 6,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/050cache",
            "items": [
              {
                "text": "谈一谈对浏览器的缓存机制的理解",
                "key": "/interview/frontend/browser/050cache/050010_browser_caching_mechanism",
                "link": "/interview/frontend/browser/050cache/050010_browser_caching_mechanism"
              },
              {
                "text": "什么是协商缓存？",
                "key": "/interview/frontend/browser/050cache/050020_negotiation_cache",
                "link": "/interview/frontend/browser/050cache/050020_negotiation_cache"
              },
              {
                "text": "什么是强缓存？",
                "key": "/interview/frontend/browser/050cache/050030_strong_caching",
                "link": "/interview/frontend/browser/050cache/050030_strong_caching"
              },
              {
                "text": "协商缓存和强缓存的区别？",
                "key": "/interview/frontend/browser/050cache/050040_negotiation_and_strong_caching",
                "link": "/interview/frontend/browser/050cache/050040_negotiation_and_strong_caching"
              },
              {
                "text": "为什么需要浏览器缓存？",
                "key": "/interview/frontend/browser/050cache/050050_why_do_i_need_browser_caching",
                "link": "/interview/frontend/browser/050cache/050050_why_do_i_need_browser_caching"
              },
              {
                "text": "点击刷新按钮或者按 F5、按 Ctrl+F5 （强制刷新）、地址栏回车有什么区别？",
                "key": "/interview/frontend/browser/050cache/050060_browser_various_refresh_difference",
                "link": "/interview/frontend/browser/050cache/050060_browser_various_refresh_difference"
              }
            ]
          },
          {
            "text": "本地存储 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/060localstorage",
            "items": [
              {
                "text": "浏览器本地存储方式及使用场景",
                "key": "/interview/frontend/browser/060localstorage/060010_browser_local_storage",
                "link": "/interview/frontend/browser/060localstorage/060010_browser_local_storage"
              },
              {
                "text": "Cookie有哪些字段，作用分别是什么",
                "key": "/interview/frontend/browser/060localstorage/060020_cookie",
                "link": "/interview/frontend/browser/060localstorage/060020_cookie"
              },
              {
                "text": "Cookie、LocalStorage、SessionStorage区别",
                "key": "/interview/frontend/browser/060localstorage/060030_cookie_localstorage_sessionstorage",
                "link": "/interview/frontend/browser/060localstorage/060030_cookie_localstorage_sessionstorage"
              },
              {
                "text": "token为什么要设置过期时间，时限多长合适？",
                "key": "/interview/frontend/browser/060localstorage/060040_token_expiration_time",
                "link": "/interview/frontend/browser/060localstorage/060040_token_expiration_time"
              },
              {
                "text": "Localstorage 会遇到什么安全问题",
                "key": "/interview/frontend/browser/060localstorage/060050_localstorage_safety_problem",
                "link": "/interview/frontend/browser/060localstorage/060050_localstorage_safety_problem"
              },
              {
                "text": "前端储存的⽅式有哪些？",
                "key": "/interview/frontend/browser/060localstorage/060060_frontend_storage",
                "link": "/interview/frontend/browser/060localstorage/060060_frontend_storage"
              },
              {
                "text": "IndexedDB有哪些特点？",
                "key": "/interview/frontend/browser/060localstorage/060070_indexed_db",
                "link": "/interview/frontend/browser/060localstorage/060070_indexed_db"
              }
            ]
          },
          {
            "text": "同源策略 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/070cors",
            "items": [
              {
                "text": "strategy.md",
                "key": "/interview/frontend/browser/070cors/070010_browser_homologous",
                "link": "/interview/frontend/browser/070cors/070010_browser_homologous"
              },
              {
                "text": "如何解决跨越问题",
                "key": "/interview/frontend/browser/070cors/070020_solving_crossing_problems",
                "link": "/interview/frontend/browser/070cors/070020_solving_crossing_problems"
              },
              {
                "text": "正向代理和反向代理的区别",
                "key": "/interview/frontend/browser/070cors/070030_forward_proxy_and_reverse_proxy",
                "link": "/interview/frontend/browser/070cors/070030_forward_proxy_and_reverse_proxy"
              },
              {
                "text": "什么是 Nginx，工作原理？",
                "key": "/interview/frontend/browser/070cors/070040_nginx",
                "link": "/interview/frontend/browser/070cors/070040_nginx"
              },
              {
                "text": "浏览器对哪些跨域是允许的",
                "key": "/interview/frontend/browser/070cors/070050_which_cross_domains_are_allowed_by_the_browser",
                "link": "/interview/frontend/browser/070cors/070050_which_cross_domains_are_allowed_by_the_browser"
              }
            ]
          },
          {
            "text": "事件机制 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/080event",
            "items": [
              {
                "text": "事件是什么？事件模型？",
                "key": "/interview/frontend/browser/080event/080010_browser_event",
                "link": "/interview/frontend/browser/080event/080010_browser_event"
              },
              {
                "text": "介绍事件传播机制（事件流），事件传播的三个阶段？",
                "key": "/interview/frontend/browser/080event/080020_browser_event_flow",
                "link": "/interview/frontend/browser/080event/080020_browser_event_flow"
              },
              {
                "text": "如何阻止事件传播（事件冒泡）",
                "key": "/interview/frontend/browser/080event/080030_browser_event_bubbling",
                "link": "/interview/frontend/browser/080event/080030_browser_event_bubbling"
              },
              {
                "text": "如何取消默认事件",
                "key": "/interview/frontend/browser/080event/080040_browser_cancel_default_event",
                "link": "/interview/frontend/browser/080event/080040_browser_cancel_default_event"
              },
              {
                "text": "什么是事件代理（事件委托），使用场景",
                "key": "/interview/frontend/browser/080event/080050_browser_event_proxy",
                "link": "/interview/frontend/browser/080event/080050_browser_event_proxy"
              }
            ]
          },
          {
            "text": "垃圾回收 · 3",
            "itemNums": 3,
            "itemDepthNums": 3,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/090gc",
            "items": [
              {
                "text": "浏览器垃圾是怎么样产生的，为什么需要回收",
                "key": "/interview/frontend/browser/090gc/090010_browser_garbage_generation_and_recycling",
                "link": "/interview/frontend/browser/090gc/090010_browser_garbage_generation_and_recycling"
              },
              {
                "text": "浏览器怎么进行垃圾回收（V8 GC）",
                "key": "/interview/frontend/browser/090gc/090020_browser_gc",
                "link": "/interview/frontend/browser/090gc/090020_browser_gc"
              },
              {
                "text": "浏览器中不同类型变量的内存都是何时释放？",
                "key": "/interview/frontend/browser/090gc/090030_variable_memory_release",
                "link": "/interview/frontend/browser/090gc/090030_variable_memory_release"
              }
            ]
          },
          {
            "text": "内存泄漏 · 3",
            "itemNums": 3,
            "itemDepthNums": 3,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/100memoryleak",
            "items": [
              {
                "text": "什么是内存泄漏",
                "key": "/interview/frontend/browser/100memoryleak/100010_memory_leak",
                "link": "/interview/frontend/browser/100memoryleak/100010_memory_leak"
              },
              {
                "text": "哪些操作会造成内存泄漏",
                "key": "/interview/frontend/browser/100memoryleak/100020_what_will_cause_memory_leak",
                "link": "/interview/frontend/browser/100memoryleak/100020_what_will_cause_memory_leak"
              },
              {
                "text": "浏览器中如何查看内存泄漏",
                "key": "/interview/frontend/browser/100memoryleak/100030_how_to_view_memory_leak_for_browser",
                "link": "/interview/frontend/browser/100memoryleak/100030_how_to_view_memory_leak_for_browser"
              }
            ]
          },
          {
            "text": "其他 · 2",
            "itemNums": 2,
            "itemDepthNums": 2,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/browser/110other",
            "items": [
              {
                "text": "window.onload 和 document.onDOMContentLoaded 有什么区别？",
                "key": "/interview/frontend/browser/110other/110010_load_and_domcontentloaded",
                "link": "/interview/frontend/browser/110other/110010_load_and_domcontentloaded"
              },
              {
                "text": "defer 和 async ？",
                "key": "/interview/frontend/browser/110other/110020_defer_async",
                "link": "/interview/frontend/browser/110other/110020_defer_async"
              }
            ]
          }
        ]
      },
      {
        "text": "CSS · 68",
        "itemNums": 12,
        "itemDepthNums": 68,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/css",
        "items": [
          {
            "text": "基础 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/010base",
            "items": [
              {
                "text": "CSS 加载方式有几种？",
                "key": "/interview/frontend/css/010base/010010_css_load",
                "link": "/interview/frontend/css/010base/010010_css_load"
              },
              {
                "text": "@import 有什么作用？如何使用？",
                "key": "/interview/frontend/css/010base/010020_@import",
                "link": "/interview/frontend/css/010base/010020_@import"
              },
              {
                "text": "@charset 有什么作用？",
                "key": "/interview/frontend/css/010base/010030_@charset",
                "link": "/interview/frontend/css/010base/010030_@charset"
              },
              {
                "text": "简述 src 和 href 的区别？",
                "key": "/interview/frontend/css/010base/010040_src_href",
                "link": "/interview/frontend/css/010base/010040_src_href"
              },
              {
                "text": "导入 CSS 时 link 和 @import 区别？",
                "key": "/interview/frontend/css/010base/010050_link_@import",
                "link": "/interview/frontend/css/010base/010050_link_@import"
              }
            ]
          },
          {
            "text": "选择器 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/020selector",
            "items": [
              {
                "text": "CSS 选择器常见的有几种？",
                "key": "/interview/frontend/css/020selector/020010_selector_all",
                "link": "/interview/frontend/css/020selector/020010_selector_all"
              },
              {
                "text": "id 选择器和 class 选择器的使用场景分别是什么？",
                "key": "/interview/frontend/css/020selector/020020_id_calss_selector",
                "link": "/interview/frontend/css/020selector/020020_id_calss_selector"
              },
              {
                "text": "伪类选择器有哪些？",
                "key": "/interview/frontend/css/020selector/020030_pseudoclass_selector",
                "link": "/interview/frontend/css/020selector/020030_pseudoclass_selector"
              },
              {
                "text": "伪元素和伪类的区别？",
                "key": "/interview/frontend/css/020selector/020040_pseudoelements_and_pseudoclasses",
                "link": "/interview/frontend/css/020selector/020040_pseudoelements_and_pseudoclasses"
              },
              {
                "text": "CSS 中是否存在父选择器？如何通过子元素选取父元素？",
                "key": "/interview/frontend/css/020selector/020050_parent_selector",
                "link": "/interview/frontend/css/020selector/020050_parent_selector"
              },
              {
                "text": "选择器的优先级是如何计算的？",
                "key": "/interview/frontend/css/020selector/020060_selector_priority",
                "link": "/interview/frontend/css/020selector/020060_selector_priority"
              },
              {
                "text": "浏览器是怎样解析 CSS 选择器的？",
                "key": "/interview/frontend/css/020selector/020070_browser_parse_selector",
                "link": "/interview/frontend/css/020selector/020070_browser_parse_selector"
              }
            ]
          },
          {
            "text": "结构&层叠 · 2",
            "itemNums": 2,
            "itemDepthNums": 2,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/030structure_stacking",
            "items": [
              {
                "text": "什么是 CSS 继承？哪些属性能继承，哪些不能？",
                "key": "/interview/frontend/css/030structure_stacking/030010_css_inherit",
                "link": "/interview/frontend/css/030structure_stacking/030010_css_inherit"
              },
              {
                "text": "CSS 中各个元素的层叠顺序？",
                "key": "/interview/frontend/css/030structure_stacking/030020_css_element_cascading_order",
                "link": "/interview/frontend/css/030structure_stacking/030020_css_element_cascading_order"
              }
            ]
          },
          {
            "text": "值&单位 · 3",
            "itemNums": 3,
            "itemDepthNums": 3,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/040value_unit",
            "items": [
              {
                "text": "有没有使用过视网膜分辨率的图形？当中使用什么技术？",
                "key": "/interview/frontend/css/040value_unit/040010_retinal_resolution",
                "link": "/interview/frontend/css/040value_unit/040010_retinal_resolution"
              },
              {
                "text": "px，em，rem，vw 有什么区别？使用场景？",
                "key": "/interview/frontend/css/040value_unit/040020_px_em_rem_vw",
                "link": "/interview/frontend/css/040value_unit/040020_px_em_rem_vw"
              },
              {
                "text": "什么是物理像素，逻辑像素和像素密度，为什么在移动端开发时需要用到@3x, @2x这种图片？",
                "key": "/interview/frontend/css/040value_unit/040030_pixel",
                "link": "/interview/frontend/css/040value_unit/040030_pixel"
              }
            ]
          },
          {
            "text": "字体&文本 · 4",
            "itemNums": 4,
            "itemDepthNums": 4,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/050font_text",
            "items": [
              {
                "text": "简述字体图标的原理",
                "key": "/interview/frontend/css/050font_text/050010_font_icon",
                "link": "/interview/frontend/css/050font_text/050010_font_icon"
              },
              {
                "text": "浏览器中为什么建议使用偶数大小的字体?",
                "key": "/interview/frontend/css/050font_text/050020_even_numbers_font",
                "link": "/interview/frontend/css/050font_text/050020_even_numbers_font"
              },
              {
                "text": "如何让浏览器显示小于 12px 的文字？",
                "key": "/interview/frontend/css/050font_text/050030_less_than_12px",
                "link": "/interview/frontend/css/050font_text/050030_less_than_12px"
              },
              {
                "text": "让页面里的字体变清晰，变细用CSS怎么做？ ",
                "key": "/interview/frontend/css/050font_text/050040_font_becomes_clearer_and_thinner",
                "link": "/interview/frontend/css/050font_text/050040_font_becomes_clearer_and_thinner"
              }
            ]
          },
          {
            "text": "视觉格式化 · 8",
            "itemNums": 8,
            "itemDepthNums": 8,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/060visual_formatting",
            "items": [
              {
                "text": "IE 盒模型和 W3C 盒模型有什么区别?",
                "key": "/interview/frontend/css/060visual_formatting/060010_ie_w3c_box",
                "link": "/interview/frontend/css/060visual_formatting/060010_ie_w3c_box"
              },
              {
                "text": "在什么场景下会出现外边距合并？如何合并？如何不让相邻元素外边距合并？父子外边距合并的范例？",
                "key": "/interview/frontend/css/060visual_formatting/060020_outer_margin_merge",
                "link": "/interview/frontend/css/060visual_formatting/060020_outer_margin_merge"
              },
              {
                "text": "line-height: 2; 和 line-height: 200%; 有什么区别?",
                "key": "/interview/frontend/css/060visual_formatting/060030_line_height",
                "link": "/interview/frontend/css/060visual_formatting/060030_line_height"
              },
              {
                "text": "行内元素的边框、边界等 '框属性' 是由 font-size 还是 line-height 控制？",
                "key": "/interview/frontend/css/060visual_formatting/060040_border_of_inline_elements",
                "link": "/interview/frontend/css/060visual_formatting/060040_border_of_inline_elements"
              },
              {
                "text": "height=line-height 可以用来垂直居中单行文本？代码怎么实现？",
                "key": "/interview/frontend/css/060visual_formatting/060050_vertically_centered_single_line_text",
                "link": "/interview/frontend/css/060visual_formatting/060050_vertically_centered_single_line_text"
              },
              {
                "text": "inline-block 有什么特性？实际应用场景？",
                "key": "/interview/frontend/css/060visual_formatting/060060_inline_block",
                "link": "/interview/frontend/css/060visual_formatting/060060_inline_block"
              },
              {
                "text": "如何去除两个按钮中间的缝隙问题？",
                "key": "/interview/frontend/css/060visual_formatting/060070_del_button_crevice",
                "link": "/interview/frontend/css/060visual_formatting/060070_del_button_crevice"
              },
              {
                "text": "一个页面有一排高度不一样的产品图，这时如果我们用 inline-block ，怎样使他们顶端对齐？",
                "key": "/interview/frontend/css/060visual_formatting/060080_top_align",
                "link": "/interview/frontend/css/060visual_formatting/060080_top_align"
              }
            ]
          },
          {
            "text": "盒子 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/070box",
            "items": [
              {
                "text": "CSS 盒模型？",
                "key": "/interview/frontend/css/070box/070010_css_box_model",
                "link": "/interview/frontend/css/070box/070010_css_box_model"
              },
              {
                "text": "BFC 是什么？如何构成 BFC？BFC 有什么作用？",
                "key": "/interview/frontend/css/070box/070020_css_bfc",
                "link": "/interview/frontend/css/070box/070020_css_bfc"
              },
              {
                "text": "CSS 中隐藏元素的方法有哪些？有什么区别？",
                "key": "/interview/frontend/css/070box/070030_hide_elements",
                "link": "/interview/frontend/css/070box/070030_hide_elements"
              },
              {
                "text": "文本溢出加 ... 如何实现？",
                "key": "/interview/frontend/css/070box/070040_text_overflow",
                "link": "/interview/frontend/css/070box/070040_text_overflow"
              },
              {
                "text": "如何在页面上实现一个圆形的可点击区域？",
                "key": "/interview/frontend/css/070box/070050_circular_clickable_area",
                "link": "/interview/frontend/css/070box/070050_circular_clickable_area"
              },
              {
                "text": "margin 什么时候会无效？",
                "key": "/interview/frontend/css/070box/070060_margin_invalid",
                "link": "/interview/frontend/css/070box/070060_margin_invalid"
              },
              {
                "text": "margin 重叠问题?",
                "key": "/interview/frontend/css/070box/070070_margin_overlap",
                "link": "/interview/frontend/css/070box/070070_margin_overlap"
              }
            ]
          },
          {
            "text": "浮动 · 3",
            "itemNums": 3,
            "itemDepthNums": 3,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/080float",
            "items": [
              {
                "text": "浮动元素有什么特征？对父容器、其他浮动元素、普通元素、文字分别有什么影响？",
                "key": "/interview/frontend/css/080float/080010_floating_element",
                "link": "/interview/frontend/css/080float/080010_floating_element"
              },
              {
                "text": "为什么需要清除浮动？清除浮动的方式？",
                "key": "/interview/frontend/css/080float/080020_clear_float",
                "link": "/interview/frontend/css/080float/080020_clear_float"
              },
              {
                "text": "clear 属性清除浮动的原理？",
                "key": "/interview/frontend/css/080float/080030_clear_float_principle",
                "link": "/interview/frontend/css/080float/080030_clear_float_principle"
              }
            ]
          },
          {
            "text": "定位 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/090postion",
            "items": [
              {
                "text": "postion 有什么属性，static是什么? static 在文档流里吗?",
                "key": "/interview/frontend/css/090postion/090010_postion",
                "link": "/interview/frontend/css/090postion/090010_postion"
              },
              {
                "text": "有几种定位方式？分别是如何实现定位的？参考点是什么？使用场景是什么？",
                "key": "/interview/frontend/css/090postion/090020_positioning_method",
                "link": "/interview/frontend/css/090postion/090020_positioning_method"
              },
              {
                "text": "absolute 与 fixed 区别？",
                "key": "/interview/frontend/css/090postion/090030_absolute_fixed",
                "link": "/interview/frontend/css/090postion/090030_absolute_fixed"
              },
              {
                "text": "z-index 有什么作用？如何使用？",
                "key": "/interview/frontend/css/090postion/090040_zindex",
                "link": "/interview/frontend/css/090postion/090040_zindex"
              },
              {
                "text": "z-index 属性在什么情况下会失效？",
                "key": "/interview/frontend/css/090postion/090050_zindex_invalid",
                "link": "/interview/frontend/css/090postion/090050_zindex_invalid"
              }
            ]
          },
          {
            "text": "布局 · 9",
            "itemNums": 9,
            "itemDepthNums": 9,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/100layout",
            "items": [
              {
                "text": "flex 布局 和 grid 布局区别？",
                "key": "/interview/frontend/css/100layout/100010_flex_grid",
                "link": "/interview/frontend/css/100layout/100010_flex_grid"
              },
              {
                "text": "flex: 1 代表的含义是什么？",
                "key": "/interview/frontend/css/100layout/100020_flex1",
                "link": "/interview/frontend/css/100layout/100020_flex1"
              },
              {
                "text": "CSS 如何实现瀑布流布局？",
                "key": "/interview/frontend/css/100layout/100030_waterfall_flow_layout",
                "link": "/interview/frontend/css/100layout/100030_waterfall_flow_layout"
              },
              {
                "text": "如何让块级元素水平居中？如何让行内元素水平居中？如何让 inline-block 元素水平居中？",
                "key": "/interview/frontend/css/100layout/100040_horizontally",
                "link": "/interview/frontend/css/100layout/100040_horizontally"
              },
              {
                "text": "垂直上下居中的办法？",
                "key": "/interview/frontend/css/100layout/100050_vertical_top_bottom_center",
                "link": "/interview/frontend/css/100layout/100050_vertical_top_bottom_center"
              },
              {
                "text": "如何实现垂直居中？",
                "key": "/interview/frontend/css/100layout/100060_vertically_centered",
                "link": "/interview/frontend/css/100layout/100060_vertically_centered"
              },
              {
                "text": "为什么 margin:auto 无法实现垂直居中?",
                "key": "/interview/frontend/css/100layout/100070_margin_auto1",
                "link": "/interview/frontend/css/100layout/100070_margin_auto1"
              },
              {
                "text": "为什么图片使用 margin:auto 不能水平居中？",
                "key": "/interview/frontend/css/100layout/100080_margin_auto2",
                "link": "/interview/frontend/css/100layout/100080_margin_auto2"
              },
              {
                "text": "响应式布局原理？",
                "key": "/interview/frontend/css/100layout/100090_principle_of_responsive_layout",
                "link": "/interview/frontend/css/100layout/100090_principle_of_responsive_layout"
              }
            ]
          },
          {
            "text": "浏览器 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/110browser",
            "items": [
              {
                "text": "IE6、7 的 Hack 写法是？ ",
                "key": "/interview/frontend/css/110browser/110010_ie6and7_hack",
                "link": "/interview/frontend/css/110browser/110010_ie6and7_hack"
              },
              {
                "text": "列举常见浏览器兼容性问题及处理范例？ ",
                "key": "/interview/frontend/css/110browser/110020_browser_compatible",
                "link": "/interview/frontend/css/110browser/110020_browser_compatible"
              },
              {
                "text": "CSS Reset 和 Normalize.css 有什么区别？ ",
                "key": "/interview/frontend/css/110browser/110030_css_reset_and_normalize",
                "link": "/interview/frontend/css/110browser/110030_css_reset_and_normalize"
              },
              {
                "text": "CSS 预编译器是什么？后编译器（PostCSS）是什么？ ",
                "key": "/interview/frontend/css/110browser/110040_css_compiler",
                "link": "/interview/frontend/css/110browser/110040_css_compiler"
              },
              {
                "text": "CSS 预处理器的比较：Less、Sass？",
                "key": "/interview/frontend/css/110browser/110050_css_preprocessor",
                "link": "/interview/frontend/css/110browser/110050_css_preprocessor"
              }
            ]
          },
          {
            "text": "其他 · 10",
            "itemNums": 10,
            "itemDepthNums": 10,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/css/120other",
            "items": [
              {
                "text": "列举你了解的 HTML5、CSS3 新特性？",
                "key": "/interview/frontend/css/120other/120010_new_features",
                "link": "/interview/frontend/css/120other/120010_new_features"
              },
              {
                "text": "可以通过哪些方法优化 CSS3 Animation 渲染？",
                "key": "/interview/frontend/css/120other/120020_animation_optimization",
                "link": "/interview/frontend/css/120other/120020_animation_optimization"
              },
              {
                "text": "列举 CSS 编码规范？",
                "key": "/interview/frontend/css/120other/120030_coding_specifications",
                "link": "/interview/frontend/css/120other/120030_coding_specifications"
              },
              {
                "text": "编码规范的作用是什么？列举 5 条以上编码规范",
                "key": "/interview/frontend/css/120other/120040_the_role_of_coding_norms",
                "link": "/interview/frontend/css/120other/120040_the_role_of_coding_norms"
              },
              {
                "text": "display、float、position 的关系?",
                "key": "/interview/frontend/css/120other/120050_display_float_position",
                "link": "/interview/frontend/css/120other/120050_display_float_position"
              },
              {
                "text": "CSS 画一条 0.5px 的线思路？",
                "key": "/interview/frontend/css/120other/120060_css_0.5px_line",
                "link": "/interview/frontend/css/120other/120060_css_0.5px_line"
              },
              {
                "text": "1px 问题是什么？如何解决？",
                "key": "/interview/frontend/css/120other/120070_css_1px",
                "link": "/interview/frontend/css/120other/120070_css_1px"
              },
              {
                "text": "简述 CSS 隔离方案?",
                "key": "/interview/frontend/css/120other/120080_css_quarantine",
                "link": "/interview/frontend/css/120other/120080_css_quarantine"
              },
              {
                "text": "CSS 优化？",
                "key": "/interview/frontend/css/120other/120090_css_optimization",
                "link": "/interview/frontend/css/120other/120090_css_optimization"
              },
              {
                "text": "CSS 工程化理解？",
                "key": "/interview/frontend/css/120other/120100_css_engineering",
                "link": "/interview/frontend/css/120other/120100_css_engineering"
              }
            ]
          }
        ]
      },
      {
        "text": "HTML · 24",
        "itemNums": 4,
        "itemDepthNums": 24,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/html",
        "items": [
          {
            "text": "基础 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/html/010base",
            "items": [
              {
                "text": "说一下对语体化的理解？",
                "key": "/interview/frontend/html/010base/010010_stylization",
                "link": "/interview/frontend/html/010base/010010_stylization"
              },
              {
                "text": "DOCTYPE 有什么作用？ 严格模式与混杂模式如何区分？它们有何意义？",
                "key": "/interview/frontend/html/010base/010020_DOCTYPE1",
                "link": "/interview/frontend/html/010base/010020_DOCTYPE1"
              },
              {
                "text": "HTML5 为什么只写 <!DOCTYPE html> ？",
                "key": "/interview/frontend/html/010base/010030_DOCTYPE2",
                "link": "/interview/frontend/html/010base/010030_DOCTYPE2"
              },
              {
                "text": "页面出现了乱码，是什么问题？如何解决？",
                "key": "/interview/frontend/html/010base/010040_garbled_code",
                "link": "/interview/frontend/html/010base/010040_garbled_code"
              },
              {
                "text": "谈谈对 Web 标准以及 W3C 标准的理解？",
                "key": "/interview/frontend/html/010base/010050_web_and_w3c",
                "link": "/interview/frontend/html/010base/010050_web_and_w3c"
              },
              {
                "text": "HTML 全局属性（Global Attribute）有哪些？",
                "key": "/interview/frontend/html/010base/010060_global_attribute",
                "link": "/interview/frontend/html/010base/010060_global_attribute"
              },
              {
                "text": "前端页面有哪三层构成，分别是什么？作用是什么？",
                "key": "/interview/frontend/html/010base/010070_page_constitute",
                "link": "/interview/frontend/html/010base/010070_page_constitute"
              }
            ]
          },
          {
            "text": "标签&属性 · 8",
            "itemNums": 8,
            "itemDepthNums": 8,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/html/020labels_attributes",
            "items": [
              {
                "text": "行内元素有哪些？块级元素有哪些？ 空 (void) 元素有那些？",
                "key": "/interview/frontend/html/020labels_attributes/020010_element_type",
                "link": "/interview/frontend/html/020labels_attributes/020010_element_type"
              },
              {
                "text": "meta 标签有哪些常见的值？",
                "key": "/interview/frontend/html/020labels_attributes/020020_meta_label",
                "link": "/interview/frontend/html/020labels_attributes/020020_meta_label"
              },
              {
                "text": "meta viewport 是做什么用的，怎么写？",
                "key": "/interview/frontend/html/020labels_attributes/020030_meta_viewport",
                "link": "/interview/frontend/html/020labels_attributes/020030_meta_viewport"
              },
              {
                "text": "如何在 HTML 页面上展示一段代码？",
                "key": "/interview/frontend/html/020labels_attributes/020040_code_view",
                "link": "/interview/frontend/html/020labels_attributes/020040_code_view"
              },
              {
                "text": "img 标签的 title 和 alt 属性有什么区别？",
                "key": "/interview/frontend/html/020labels_attributes/020050_img_alt_title",
                "link": "/interview/frontend/html/020labels_attributes/020050_img_alt_title"
              },
              {
                "text": "data- 属性的作用？",
                "key": "/interview/frontend/html/020labels_attributes/020060_data_attribute",
                "link": "/interview/frontend/html/020labels_attributes/020060_data_attribute"
              },
              {
                "text": "iframe 优缺点？",
                "key": "/interview/frontend/html/020labels_attributes/020070_iframe",
                "link": "/interview/frontend/html/020labels_attributes/020070_iframe"
              },
              {
                "text": "如何实现网页和 iframe 之间的通讯？",
                "key": "/interview/frontend/html/020labels_attributes/020080_iframe_communication",
                "link": "/interview/frontend/html/020labels_attributes/020080_iframe_communication"
              }
            ]
          },
          {
            "text": "表单 · 4",
            "itemNums": 4,
            "itemDepthNums": 4,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/html/030form",
            "items": [
              {
                "text": "在 input 里，name 属性有什么作用？",
                "key": "/interview/frontend/html/030form/030010_input_name",
                "link": "/interview/frontend/html/030form/030010_input_name"
              },
              {
                "text": "label 属性有什么作用？如何使用？",
                "key": "/interview/frontend/html/030form/030020_label",
                "link": "/interview/frontend/html/030form/030020_label"
              },
              {
                "text": "placeholder 属性有什么作用？",
                "key": "/interview/frontend/html/030form/030030_placeholder",
                "link": "/interview/frontend/html/030form/030030_placeholder"
              },
              {
                "text": "type=hidden 隐藏域有什么作用？",
                "key": "/interview/frontend/html/030form/030040_type_hidden",
                "link": "/interview/frontend/html/030form/030040_type_hidden"
              }
            ]
          },
          {
            "text": "其他 · 5",
            "itemNums": 5,
            "itemDepthNums": 5,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/html/040other",
            "items": [
              {
                "text": "什么是渐进增强，什么是优雅降级？",
                "key": "/interview/frontend/html/040other/040010_progressive_enhancement",
                "link": "/interview/frontend/html/040other/040010_progressive_enhancement"
              },
              {
                "text": "HTML5的文件离线储存怎么使用，工作原理是什么？",
                "key": "/interview/frontend/html/040other/040020_off_line_storage",
                "link": "/interview/frontend/html/040other/040020_off_line_storage"
              },
              {
                "text": "前端需要注意哪些 SEO?",
                "key": "/interview/frontend/html/040other/040030_seo",
                "link": "/interview/frontend/html/040other/040030_seo"
              },
              {
                "text": "请描述下 SEO 中的 TDK？",
                "key": "/interview/frontend/html/040other/040040_seo_tdk",
                "link": "/interview/frontend/html/040other/040040_seo_tdk"
              },
              {
                "text": "Canvas 和 SVG 有什么区别？",
                "key": "/interview/frontend/html/040other/040050_canvas_svg",
                "link": "/interview/frontend/html/040other/040050_canvas_svg"
              }
            ]
          }
        ]
      },
      {
        "text": "JavaScript · 147",
        "itemNums": 3,
        "itemDepthNums": 147,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/javascript",
        "items": [
          {
            "text": "理论题 · 101",
            "itemNums": 12,
            "itemDepthNums": 101,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/javascript/core",
            "items": [
              {
                "text": "基础 · 9",
                "itemNums": 9,
                "itemDepthNums": 9,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/010base",
                "items": [
                  {
                    "text": "强类型语言和弱类型语言的区别？",
                    "key": "/interview/frontend/javascript/core/010base/010010_stronglytype_and_weaklytype",
                    "link": "/interview/frontend/javascript/core/010base/010010_stronglytype_and_weaklytype"
                  },
                  {
                    "text": "解释型语言和编译型语言的区别？",
                    "key": "/interview/frontend/javascript/core/010base/010020_interpretive_and_compiled",
                    "link": "/interview/frontend/javascript/core/010base/010020_interpretive_and_compiled"
                  },
                  {
                    "text": "面向过程与面向对象编程分别是什么？",
                    "key": "/interview/frontend/javascript/core/010base/010030_oop_pop",
                    "link": "/interview/frontend/javascript/core/010base/010030_oop_pop"
                  },
                  {
                    "text": "let、const、var 的区别？",
                    "key": "/interview/frontend/javascript/core/010base/010040_let_const_var",
                    "link": "/interview/frontend/javascript/core/010base/010040_let_const_var"
                  },
                  {
                    "text": "JS 中什么是变量提升？导致了什么问题？",
                    "key": "/interview/frontend/javascript/core/010base/010050_variable_elevation",
                    "link": "/interview/frontend/javascript/core/010base/010050_variable_elevation"
                  },
                  {
                    "text": "什么是暂时性死区？",
                    "key": "/interview/frontend/javascript/core/010base/010055_tdz",
                    "link": "/interview/frontend/javascript/core/010base/010055_tdz"
                  },
                  {
                    "text": "&&、||、!!、?? 运算符作用分别是什么?",
                    "key": "/interview/frontend/javascript/core/010base/010060_logical_operator",
                    "link": "/interview/frontend/javascript/core/010base/010060_logical_operator"
                  },
                  {
                    "text": "JS 脚本延迟加载的方式有哪些？",
                    "key": "/interview/frontend/javascript/core/010base/010070_script_delayed_loading",
                    "link": "/interview/frontend/javascript/core/010base/010070_script_delayed_loading"
                  },
                  {
                    "text": "什么是栈、堆，有何区别？",
                    "key": "/interview/frontend/javascript/core/010base/010080_stack_heap",
                    "link": "/interview/frontend/javascript/core/010base/010080_stack_heap"
                  }
                ]
              },
              {
                "text": "数据类型 · 18",
                "itemNums": 18,
                "itemDepthNums": 18,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/020datatype",
                "items": [
                  {
                    "text": "JS 有哪些数据类型，区别是？",
                    "key": "/interview/frontend/javascript/core/020datatype/020010_datatype",
                    "link": "/interview/frontend/javascript/core/020datatype/020010_datatype"
                  },
                  {
                    "text": "JS 数据类型判断的方式有哪些？",
                    "key": "/interview/frontend/javascript/core/020datatype/020020_datatype_judgment",
                    "link": "/interview/frontend/javascript/core/020datatype/020020_datatype_judgment"
                  },
                  {
                    "text": "null 和 undefined 区别？",
                    "key": "/interview/frontend/javascript/core/020datatype/020030_null_undefined",
                    "link": "/interview/frontend/javascript/core/020datatype/020030_null_undefined"
                  },
                  {
                    "text": "typeof null 的结果是什么，为什么？",
                    "key": "/interview/frontend/javascript/core/020datatype/020040_typeof_null",
                    "link": "/interview/frontend/javascript/core/020datatype/020040_typeof_null"
                  },
                  {
                    "text": "intanceof 操作符实现原理？",
                    "key": "/interview/frontend/javascript/core/020datatype/020050_instanceof",
                    "link": "/interview/frontend/javascript/core/020datatype/020050_instanceof"
                  },
                  {
                    "text": "JS 中 0.1+0.2 != 0.3？",
                    "key": "/interview/frontend/javascript/core/020datatype/020060_0.1_0.2_sum",
                    "link": "/interview/frontend/javascript/core/020datatype/020060_0.1_0.2_sum"
                  },
                  {
                    "text": "怎样让 0.1+0.2 等于0.3",
                    "key": "/interview/frontend/javascript/core/020datatype/020060_0.1_0.2_sum2",
                    "link": "/interview/frontend/javascript/core/020datatype/020060_0.1_0.2_sum2"
                  },
                  {
                    "text": "typeof NaN 的结果是什么？",
                    "key": "/interview/frontend/javascript/core/020datatype/020070_typeof_nan",
                    "link": "/interview/frontend/javascript/core/020datatype/020070_typeof_nan"
                  },
                  {
                    "text": "isNaN 和 Number.isNaN 函数的区别？",
                    "key": "/interview/frontend/javascript/core/020datatype/020080_isnan_number.isnan",
                    "link": "/interview/frontend/javascript/core/020datatype/020080_isnan_number.isnan"
                  },
                  {
                    "text": "Object.is() 与比较操作符 ===、== 区别？",
                    "key": "/interview/frontend/javascript/core/020datatype/020090_object.is",
                    "link": "/interview/frontend/javascript/core/020datatype/020090_object.is"
                  },
                  {
                    "text": "介绍基本数据类型的封箱与拆箱？",
                    "key": "/interview/frontend/javascript/core/020datatype/020100_sealing_unboxing",
                    "link": "/interview/frontend/javascript/core/020datatype/020100_sealing_unboxing"
                  },
                  {
                    "text": "Number() 存储空间是多大？如后台发送一个超过最大存储数字怎么办？",
                    "key": "/interview/frontend/javascript/core/020datatype/020110_number_storage",
                    "link": "/interview/frontend/javascript/core/020datatype/020110_number_storage"
                  },
                  {
                    "text": "什么是 symbol、有什么用处？",
                    "key": "/interview/frontend/javascript/core/020datatype/020120_symbol",
                    "link": "/interview/frontend/javascript/core/020datatype/020120_symbol"
                  },
                  {
                    "text": "什么是原码、补码和反码？",
                    "key": "/interview/frontend/javascript/core/020datatype/020130_originalcode_complement_inversecode",
                    "link": "/interview/frontend/javascript/core/020datatype/020130_originalcode_complement_inversecode"
                  },
                  {
                    "text": "JS 中 Map 和 Object、Set 和 Array？",
                    "key": "/interview/frontend/javascript/core/020datatype/020140_map_set",
                    "link": "/interview/frontend/javascript/core/020datatype/020140_map_set"
                  },
                  {
                    "text": "JS 中 map、set 与 weakMap、weakSet 区别？",
                    "key": "/interview/frontend/javascript/core/020datatype/020160_map_set_weakmap_weakset",
                    "link": "/interview/frontend/javascript/core/020datatype/020160_map_set_weakmap_weakset"
                  },
                  {
                    "text": "{} 和 [] 的 valueOf 和 toString 结果是什么？",
                    "key": "/interview/frontend/javascript/core/020datatype/020170_valueog_tostring",
                    "link": "/interview/frontend/javascript/core/020datatype/020170_valueog_tostring"
                  },
                  {
                    "text": "如何使 (a == 1 && a == 2 && a == 3) 成立？",
                    "key": "/interview/frontend/javascript/core/020datatype/020180_a1_a2_a3_true",
                    "link": "/interview/frontend/javascript/core/020datatype/020180_a1_a2_a3_true"
                  }
                ]
              },
              {
                "text": "对象 · 6",
                "itemNums": 6,
                "itemDepthNums": 6,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/030object",
                "items": [
                  {
                    "text": "对象创建的方式有哪些，有什么区别？",
                    "key": "/interview/frontend/javascript/core/030object/030010_object_create",
                    "link": "/interview/frontend/javascript/core/030object/030010_object_create"
                  },
                  {
                    "text": "new 操作符的原理或者说执行过程？",
                    "key": "/interview/frontend/javascript/core/030object/030020_new",
                    "link": "/interview/frontend/javascript/core/030object/030020_new"
                  },
                  {
                    "text": "如何判断一个对象是否属于某个类？",
                    "key": "/interview/frontend/javascript/core/030object/030030_object_in_class",
                    "link": "/interview/frontend/javascript/core/030object/030030_object_in_class"
                  },
                  {
                    "text": "如何判断对象是否为空？",
                    "key": "/interview/frontend/javascript/core/030object/030040_judge_empty_object",
                    "link": "/interview/frontend/javascript/core/030object/030040_judge_empty_object"
                  },
                  {
                    "text": "如何使用 for...of 遍历普通对象？",
                    "key": "/interview/frontend/javascript/core/030object/030050_forof_in_object",
                    "link": "/interview/frontend/javascript/core/030object/030050_forof_in_object"
                  },
                  {
                    "text": "介绍下深拷贝、浅拷贝，两者区别，object.assign 是哪种？",
                    "key": "/interview/frontend/javascript/core/030object/030060_object_deepcopy_lightcopy",
                    "link": "/interview/frontend/javascript/core/030object/030060_object_deepcopy_lightcopy"
                  }
                ]
              },
              {
                "text": "数组 · 8",
                "itemNums": 8,
                "itemDepthNums": 8,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/040array",
                "items": [
                  {
                    "text": "JS 判断数组类型的方式有哪些？",
                    "key": "/interview/frontend/javascript/core/040array/040010_arraytype_judgment",
                    "link": "/interview/frontend/javascript/core/040array/040010_arraytype_judgment"
                  },
                  {
                    "text": "数组原生方法都有哪些？",
                    "key": "/interview/frontend/javascript/core/040array/040020_array_native_method",
                    "link": "/interview/frontend/javascript/core/040array/040020_array_native_method"
                  },
                  {
                    "text": "数组的哪些 API 会改变原数组？",
                    "key": "/interview/frontend/javascript/core/040array/040025_update_originalarray",
                    "link": "/interview/frontend/javascript/core/040array/040025_update_originalarray"
                  },
                  {
                    "text": "数组的哪些 API 不会改变原数组？",
                    "key": "/interview/frontend/javascript/core/040array/040028_no_update_originalarray",
                    "link": "/interview/frontend/javascript/core/040array/040028_no_update_originalarray"
                  },
                  {
                    "text": "数组去重的方式有哪些？",
                    "key": "/interview/frontend/javascript/core/040array/040030_array_deduplication",
                    "link": "/interview/frontend/javascript/core/040array/040030_array_deduplication"
                  },
                  {
                    "text": "类数组是什么，和数组有什么区别，如何转化成数组？",
                    "key": "/interview/frontend/javascript/core/040array/040040_classarray",
                    "link": "/interview/frontend/javascript/core/040array/040040_classarray"
                  },
                  {
                    "text": "为什么函数的 arguments 参数是类数组而不是数组？如何遍历类数组?",
                    "key": "/interview/frontend/javascript/core/040array/040050_arguments_is_classarray",
                    "link": "/interview/frontend/javascript/core/040array/040050_arguments_is_classarray"
                  },
                  {
                    "text": "for...of、 for...in 和 forEach、map 的区别？",
                    "key": "/interview/frontend/javascript/core/040array/040060_foreach_map_forof_forin",
                    "link": "/interview/frontend/javascript/core/040array/040060_foreach_map_forof_forin"
                  }
                ]
              },
              {
                "text": "函数 · 9",
                "itemNums": 9,
                "itemDepthNums": 9,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/050function",
                "items": [
                  {
                    "text": "箭头函数与普通函数的区别？",
                    "key": "/interview/frontend/javascript/core/050function/050010_arrow_function",
                    "link": "/interview/frontend/javascript/core/050function/050010_arrow_function"
                  },
                  {
                    "text": "如果 new 一个箭头函数的会怎样？",
                    "key": "/interview/frontend/javascript/core/050function/050020_new_arrow_function",
                    "link": "/interview/frontend/javascript/core/050function/050020_new_arrow_function"
                  },
                  {
                    "text": "什么是尾调用、尾递归、蹦床函数?",
                    "key": "/interview/frontend/javascript/core/050function/050030_function_tail_call",
                    "link": "/interview/frontend/javascript/core/050function/050030_function_tail_call"
                  },
                  {
                    "text": "什么是柯里化，应用场景？",
                    "key": "/interview/frontend/javascript/core/050function/050040_function_currying",
                    "link": "/interview/frontend/javascript/core/050function/050040_function_currying"
                  },
                  {
                    "text": "什么是闭包、优缺点、应用场景？",
                    "key": "/interview/frontend/javascript/core/050function/050050_function_closure",
                    "link": "/interview/frontend/javascript/core/050function/050050_function_closure"
                  },
                  {
                    "text": "什么是高阶函数，应用场景？",
                    "key": "/interview/frontend/javascript/core/050function/050060_function_hoc",
                    "link": "/interview/frontend/javascript/core/050function/050060_function_hoc"
                  },
                  {
                    "text": "什么是函数组合，应用场景？",
                    "key": "/interview/frontend/javascript/core/050function/050070_function_ compose",
                    "link": "/interview/frontend/javascript/core/050function/050070_function_ compose"
                  },
                  {
                    "text": "什么是惰性求值，应用场景？",
                    "key": "/interview/frontend/javascript/core/050function/050080_function_lazy_evaluation",
                    "link": "/interview/frontend/javascript/core/050function/050080_function_lazy_evaluation"
                  },
                  {
                    "text": "谈谈对函数式编程的理解？",
                    "key": "/interview/frontend/javascript/core/050function/050090_functional_programming",
                    "link": "/interview/frontend/javascript/core/050function/050090_functional_programming"
                  }
                ]
              },
              {
                "text": "作用域 · 2",
                "itemNums": 2,
                "itemDepthNums": 2,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/060scope",
                "items": [
                  {
                    "text": "简单阐述作用域、作用域链？",
                    "key": "/interview/frontend/javascript/core/060scope/070010_scope",
                    "link": "/interview/frontend/javascript/core/060scope/070010_scope"
                  },
                  {
                    "text": "什么是执行上下文、JS 有几种上下文？",
                    "key": "/interview/frontend/javascript/core/060scope/070030_execution_context",
                    "link": "/interview/frontend/javascript/core/060scope/070030_execution_context"
                  }
                ]
              },
              {
                "text": "异步 · 11",
                "itemNums": 11,
                "itemDepthNums": 11,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/070asynchronous",
                "items": [
                  {
                    "text": "什么是同步、什么是异步？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060010_synchronous_and_asynchronous",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060010_synchronous_and_asynchronous"
                  },
                  {
                    "text": "简述 Promise，有几种状态、特点是什么、解决了什么问题、优缺点是什么？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060020_promise",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060020_promise"
                  },
                  {
                    "text": "Promise then 第二个参数和catch的区别是什么?",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060030_then_secondparam_and_catch",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060030_then_secondparam_and_catch"
                  },
                  {
                    "text": "Promise.all 和 Promise.race 的区别和使用场景？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060040_promise_all_and_race",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060040_promise_all_and_race"
                  },
                  {
                    "text": "Promise 和 setTimeout 的区别？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060050_promise_and_settimeout",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060050_promise_and_settimeout"
                  },
                  {
                    "text": "async/await 是什么、有什么优势、实现原理？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060060_async_await",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060060_async_await"
                  },
                  {
                    "text": "Iterator是什么，有什么作用？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060070_iterator",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060070_iterator"
                  },
                  {
                    "text": "Generator 函数是什么、有什么作用、使用场景？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060080_generator",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060080_generator"
                  },
                  {
                    "text": "Generator 是如何做到中断和恢复的?",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060090_generator_Interruption_and_recovery",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060090_generator_Interruption_and_recovery"
                  },
                  {
                    "text": "async/await, generator, promise这三者的关联和区别是什么?",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060100_promise_asyncawait_generator",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060100_promise_asyncawait_generator"
                  },
                  {
                    "text": "defer 和 async ？",
                    "key": "/interview/frontend/javascript/core/070asynchronous/060110_defer_async",
                    "link": "/interview/frontend/javascript/core/070asynchronous/060110_defer_async"
                  }
                ]
              },
              {
                "text": "This · 3",
                "itemNums": 3,
                "itemDepthNums": 3,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/080this",
                "items": [
                  {
                    "text": "简单阐述对 This 的理解？",
                    "key": "/interview/frontend/javascript/core/080this/080010_this",
                    "link": "/interview/frontend/javascript/core/080this/080010_this"
                  },
                  {
                    "text": "如何改变函数内部的 this 指针的指向？",
                    "key": "/interview/frontend/javascript/core/080this/080020_update_function_this",
                    "link": "/interview/frontend/javascript/core/080this/080020_update_function_this"
                  },
                  {
                    "text": "call、apply 及 bind 函数区别？",
                    "key": "/interview/frontend/javascript/core/080this/080030_call_apply_bind",
                    "link": "/interview/frontend/javascript/core/080this/080030_call_apply_bind"
                  }
                ]
              },
              {
                "text": "原型 · 3",
                "itemNums": 3,
                "itemDepthNums": 3,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/090prototype",
                "items": [
                  {
                    "text": "什么是原型、原型链？",
                    "key": "/interview/frontend/javascript/core/090prototype/090010_prototype",
                    "link": "/interview/frontend/javascript/core/090prototype/090010_prototype"
                  },
                  {
                    "text": "什么是继承、JS 有哪些继承方式？",
                    "key": "/interview/frontend/javascript/core/090prototype/090020_inherit",
                    "link": "/interview/frontend/javascript/core/090prototype/090020_inherit"
                  },
                  {
                    "text": "如果一个构造函数 bind 一个对象，用此构造函数创建出的实例会继承这个对象的属性吗？为什么？",
                    "key": "/interview/frontend/javascript/core/090prototype/090030_constructor_bind_and_inherit",
                    "link": "/interview/frontend/javascript/core/090prototype/090030_constructor_bind_and_inherit"
                  }
                ]
              },
              {
                "text": "事件循环 · 6",
                "itemNums": 6,
                "itemDepthNums": 6,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/100eventloop",
                "items": [
                  {
                    "text": "什么是执行栈",
                    "key": "/interview/frontend/javascript/core/100eventloop/100005_what_is_execution_stack",
                    "link": "/interview/frontend/javascript/core/100eventloop/100005_what_is_execution_stack"
                  },
                  {
                    "text": "什么是微任务、宏任务？",
                    "key": "/interview/frontend/javascript/core/100eventloop/100010_microtask_macrotask",
                    "link": "/interview/frontend/javascript/core/100eventloop/100010_microtask_macrotask"
                  },
                  {
                    "text": "微任务、宏任务的区分是为了做什么? 优先级?",
                    "key": "/interview/frontend/javascript/core/100eventloop/100020_microtask_macrotask_distinguish",
                    "link": "/interview/frontend/javascript/core/100eventloop/100020_microtask_macrotask_distinguish"
                  },
                  {
                    "text": "阐述 JS 事件循环 EventLoop？",
                    "key": "/interview/frontend/javascript/core/100eventloop/100030_eventloop",
                    "link": "/interview/frontend/javascript/core/100eventloop/100030_eventloop"
                  },
                  {
                    "text": "setTimeout(fn, 0)多久才执行 -> Event Loop？",
                    "key": "/interview/frontend/javascript/core/100eventloop/100040_eventloop_settimeout0",
                    "link": "/interview/frontend/javascript/core/100eventloop/100040_eventloop_settimeout0"
                  },
                  {
                    "text": "JS 中事件循环和 Node 事件循环区别？process.nextTick 执行顺序？",
                    "key": "/interview/frontend/javascript/core/100eventloop/100050_eventloop_node",
                    "link": "/interview/frontend/javascript/core/100eventloop/100050_eventloop_node"
                  }
                ]
              },
              {
                "text": "浏览器对象 · 10",
                "itemNums": 10,
                "itemDepthNums": 10,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/110browser",
                "items": [
                  {
                    "text": "事件是什么？事件模型？",
                    "key": "/interview/frontend/javascript/core/110browser/110010_event_model",
                    "link": "/interview/frontend/javascript/core/110browser/110010_event_model"
                  },
                  {
                    "text": "介绍事件传播机制（事件流），事件传播的三个阶段？",
                    "key": "/interview/frontend/javascript/core/110browser/110020_event_flow",
                    "link": "/interview/frontend/javascript/core/110browser/110020_event_flow"
                  },
                  {
                    "text": "如何阻止事件传播（事件冒泡）",
                    "key": "/interview/frontend/javascript/core/110browser/110030_prevent_event_propagation",
                    "link": "/interview/frontend/javascript/core/110browser/110030_prevent_event_propagation"
                  },
                  {
                    "text": "如何取消默认事件",
                    "key": "/interview/frontend/javascript/core/110browser/110040_cancel_default_event",
                    "link": "/interview/frontend/javascript/core/110browser/110040_cancel_default_event"
                  },
                  {
                    "text": "什么是事件代理（事件委托），使用场景",
                    "key": "/interview/frontend/javascript/core/110browser/110050_event_proxy",
                    "link": "/interview/frontend/javascript/core/110browser/110050_event_proxy"
                  },
                  {
                    "text": "window.onload 和 document.onDOMContentLoaded 有什么区别？",
                    "key": "/interview/frontend/javascript/core/110browser/110060_onload_ondomcontentloaded",
                    "link": "/interview/frontend/javascript/core/110browser/110060_onload_ondomcontentloaded"
                  },
                  {
                    "text": "setTimeout、setInterval、requestAnimationFrame 各有什么特点？",
                    "key": "/interview/frontend/javascript/core/110browser/110070_settimeout_setinterval_requestanimationframe",
                    "link": "/interview/frontend/javascript/core/110browser/110070_settimeout_setinterval_requestanimationframe"
                  },
                  {
                    "text": "setTimeout 倒计时为什么会出现误差？",
                    "key": "/interview/frontend/javascript/core/110browser/110080_settimeout_error",
                    "link": "/interview/frontend/javascript/core/110browser/110080_settimeout_error"
                  },
                  {
                    "text": "cookie、sessionStorage、localStorage的区别",
                    "key": "/interview/frontend/javascript/core/110browser/110090_cookie_sessionStorage_localStorage",
                    "link": "/interview/frontend/javascript/core/110browser/110090_cookie_sessionStorage_localStorage"
                  },
                  {
                    "text": "documentFragment (文档碎片)是什么？",
                    "key": "/interview/frontend/javascript/core/110browser/110100_documentfragment",
                    "link": "/interview/frontend/javascript/core/110browser/110100_documentfragment"
                  }
                ]
              },
              {
                "text": "其他 · 16",
                "itemNums": 16,
                "itemDepthNums": 16,
                "collapsed": true,
                "collapsible": true,
                "key": "interview/frontend/javascript/core/120other",
                "items": [
                  {
                    "text": "防抖、节流的作用，分别在什么场景使用？",
                    "key": "/interview/frontend/javascript/core/120other/120010_debounce_throttle",
                    "link": "/interview/frontend/javascript/core/120other/120010_debounce_throttle"
                  },
                  {
                    "text": "ajax、axios、fetch 区别？",
                    "key": "/interview/frontend/javascript/core/120other/120020_ajax_axios_fetch",
                    "link": "/interview/frontend/javascript/core/120other/120020_ajax_axios_fetch"
                  },
                  {
                    "text": "谈谈对模块化开发的理解？",
                    "key": "/interview/frontend/javascript/core/120other/120030_modular_development",
                    "link": "/interview/frontend/javascript/core/120other/120030_modular_development"
                  },
                  {
                    "text": "简单介绍几种 JS 模块化规范、区别？",
                    "key": "/interview/frontend/javascript/core/120other/120040_modular_development_standard",
                    "link": "/interview/frontend/javascript/core/120other/120040_modular_development_standard"
                  },
                  {
                    "text": "对于一个无限下拉加载图片的页面，如何给每个图片绑定事件？",
                    "key": "/interview/frontend/javascript/core/120other/120050_infinite_dropdown_loadimage_bindevent",
                    "link": "/interview/frontend/javascript/core/120other/120050_infinite_dropdown_loadimage_bindevent"
                  },
                  {
                    "text": "什么是？哪些情况会导致内存泄漏？",
                    "key": "/interview/frontend/javascript/core/120other/120060_memory_leak",
                    "link": "/interview/frontend/javascript/core/120other/120060_memory_leak"
                  },
                  {
                    "text": "什么是设计模式？",
                    "key": "/interview/frontend/javascript/core/120other/120070_design_patterns",
                    "link": "/interview/frontend/javascript/core/120other/120070_design_patterns"
                  },
                  {
                    "text": "介绍下你了解的设计模式以及使用场景？",
                    "key": "/interview/frontend/javascript/core/120other/120080_design_patterns_more",
                    "link": "/interview/frontend/javascript/core/120other/120080_design_patterns_more"
                  },
                  {
                    "text": "什么是贪婪模式和非贪婪模式？",
                    "key": "/interview/frontend/javascript/core/120other/120090_greedymode_nongreedymode",
                    "link": "/interview/frontend/javascript/core/120other/120090_greedymode_nongreedymode"
                  },
                  {
                    "text": "XML 和 JSON 的区别？",
                    "key": "/interview/frontend/javascript/core/120other/120100_xml_json",
                    "link": "/interview/frontend/javascript/core/120other/120100_xml_json"
                  },
                  {
                    "text": "eval 是做什么的、使用场景？",
                    "key": "/interview/frontend/javascript/core/120other/120110_eval",
                    "link": "/interview/frontend/javascript/core/120other/120110_eval"
                  },
                  {
                    "text": "webscoket 的连接原理？",
                    "key": "/interview/frontend/javascript/core/120other/120120_websocket",
                    "link": "/interview/frontend/javascript/core/120other/120120_websocket"
                  },
                  {
                    "text": "什么是 Web Worker，有什么使用场景？",
                    "key": "/interview/frontend/javascript/core/120other/120125_web_worker",
                    "link": "/interview/frontend/javascript/core/120other/120125_web_worker"
                  },
                  {
                    "text": "各种图片格式的区别，如何选择图片格式，例如 png, webp 等？",
                    "key": "/interview/frontend/javascript/core/120other/120130_image_type",
                    "link": "/interview/frontend/javascript/core/120other/120130_image_type"
                  },
                  {
                    "text": "如何实现图片懒加载，思路？",
                    "key": "/interview/frontend/javascript/core/120other/120140_image_lazy_loading",
                    "link": "/interview/frontend/javascript/core/120other/120140_image_lazy_loading"
                  },
                  {
                    "text": "为什么 CSS 动画比 JS 动画高效？",
                    "key": "/interview/frontend/javascript/core/120other/120150_cssanimation_vs_jsanimation",
                    "link": "/interview/frontend/javascript/core/120other/120150_cssanimation_vs_jsanimation"
                  }
                ]
              }
            ]
          },
          {
            "text": "输出题 · 15",
            "itemNums": 15,
            "itemDepthNums": 15,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/javascript/output",
            "items": [
              {
                "text": "No.0010",
                "key": "/interview/frontend/javascript/output/010_js_op",
                "link": "/interview/frontend/javascript/output/010_js_op"
              },
              {
                "text": "No.0020",
                "key": "/interview/frontend/javascript/output/020_js_op",
                "link": "/interview/frontend/javascript/output/020_js_op"
              },
              {
                "text": "No.0030",
                "key": "/interview/frontend/javascript/output/030_js_op",
                "link": "/interview/frontend/javascript/output/030_js_op"
              },
              {
                "text": "No.0040",
                "key": "/interview/frontend/javascript/output/040_js_op",
                "link": "/interview/frontend/javascript/output/040_js_op"
              },
              {
                "text": "No.0050",
                "key": "/interview/frontend/javascript/output/050_js_op",
                "link": "/interview/frontend/javascript/output/050_js_op"
              },
              {
                "text": "No.0055",
                "key": "/interview/frontend/javascript/output/055_js_op",
                "link": "/interview/frontend/javascript/output/055_js_op"
              },
              {
                "text": "No.0060",
                "key": "/interview/frontend/javascript/output/060_js_op",
                "link": "/interview/frontend/javascript/output/060_js_op"
              },
              {
                "text": "No.0070",
                "key": "/interview/frontend/javascript/output/070_js_op",
                "link": "/interview/frontend/javascript/output/070_js_op"
              },
              {
                "text": "No.0080",
                "key": "/interview/frontend/javascript/output/080_js_op",
                "link": "/interview/frontend/javascript/output/080_js_op"
              },
              {
                "text": "No.0090",
                "key": "/interview/frontend/javascript/output/090_js_op",
                "link": "/interview/frontend/javascript/output/090_js_op"
              },
              {
                "text": "No.0100",
                "key": "/interview/frontend/javascript/output/100_js_op",
                "link": "/interview/frontend/javascript/output/100_js_op"
              },
              {
                "text": "No.0110",
                "key": "/interview/frontend/javascript/output/110_js_op",
                "link": "/interview/frontend/javascript/output/110_js_op"
              },
              {
                "text": "No.0120",
                "key": "/interview/frontend/javascript/output/120_js_op",
                "link": "/interview/frontend/javascript/output/120_js_op"
              },
              {
                "text": "No.0130",
                "key": "/interview/frontend/javascript/output/130_js_op",
                "link": "/interview/frontend/javascript/output/130_js_op"
              },
              {
                "text": "No.0140",
                "key": "/interview/frontend/javascript/output/140_js_op",
                "link": "/interview/frontend/javascript/output/140_js_op"
              }
            ]
          },
          {
            "text": "手写题 · 31",
            "itemNums": 31,
            "itemDepthNums": 31,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/javascript/write",
            "items": [
              {
                "text": "JS 实现数组 map 方法",
                "key": "/interview/frontend/javascript/write/0010_js_write_map",
                "link": "/interview/frontend/javascript/write/0010_js_write_map"
              },
              {
                "text": "JS 实现数组 forEach 方法",
                "key": "/interview/frontend/javascript/write/0020_js_write_foreach",
                "link": "/interview/frontend/javascript/write/0020_js_write_foreach"
              },
              {
                "text": "JS 实现数组 filter 方法",
                "key": "/interview/frontend/javascript/write/0030_js_wrute_filter",
                "link": "/interview/frontend/javascript/write/0030_js_wrute_filter"
              },
              {
                "text": "JS 实现数组 some 方法",
                "key": "/interview/frontend/javascript/write/0040_js_write_some",
                "link": "/interview/frontend/javascript/write/0040_js_write_some"
              },
              {
                "text": "JS 实现数组 every 方法",
                "key": "/interview/frontend/javascript/write/0050_js_write_every",
                "link": "/interview/frontend/javascript/write/0050_js_write_every"
              },
              {
                "text": "JS 实现数组 reduce 方法",
                "key": "/interview/frontend/javascript/write/0060_js_write_reduce",
                "link": "/interview/frontend/javascript/write/0060_js_write_reduce"
              },
              {
                "text": "JS 实现 compose 方法",
                "key": "/interview/frontend/javascript/write/0070_js_write_compose",
                "link": "/interview/frontend/javascript/write/0070_js_write_compose"
              },
              {
                "text": "JS 实现 instanceof 操作符",
                "key": "/interview/frontend/javascript/write/0080_js_write_instanceof",
                "link": "/interview/frontend/javascript/write/0080_js_write_instanceof"
              },
              {
                "text": "JS 实现 new 操作符",
                "key": "/interview/frontend/javascript/write/0090_js_write_new",
                "link": "/interview/frontend/javascript/write/0090_js_write_new"
              },
              {
                "text": "JS 实现 call 方法",
                "key": "/interview/frontend/javascript/write/0100_js_write_call",
                "link": "/interview/frontend/javascript/write/0100_js_write_call"
              },
              {
                "text": "JS 实现 bind 方法",
                "key": "/interview/frontend/javascript/write/0110_js_write_bind",
                "link": "/interview/frontend/javascript/write/0110_js_write_bind"
              },
              {
                "text": "JS 实现 apply 方法",
                "key": "/interview/frontend/javascript/write/0120_js_write_apply",
                "link": "/interview/frontend/javascript/write/0120_js_write_apply"
              },
              {
                "text": "JS 实现类型判断方法",
                "key": "/interview/frontend/javascript/write/0125_js_type_judgment",
                "link": "/interview/frontend/javascript/write/0125_js_type_judgment"
              },
              {
                "text": "JS 实现防抖 debounce 方法",
                "key": "/interview/frontend/javascript/write/0130_js_write_debounce",
                "link": "/interview/frontend/javascript/write/0130_js_write_debounce"
              },
              {
                "text": "JS 实现节流 throttle 方法",
                "key": "/interview/frontend/javascript/write/0140_js_write_throttle",
                "link": "/interview/frontend/javascript/write/0140_js_write_throttle"
              },
              {
                "text": "实现 JSON.stringify 方法",
                "key": "/interview/frontend/javascript/write/0150_js_write_stringify",
                "link": "/interview/frontend/javascript/write/0150_js_write_stringify"
              },
              {
                "text": "实现 JSON.parse 方法",
                "key": "/interview/frontend/javascript/write/0160_js_write_parse",
                "link": "/interview/frontend/javascript/write/0160_js_write_parse"
              },
              {
                "text": "JS 实现柯里化 curry 方法",
                "key": "/interview/frontend/javascript/write/0170_js_write_curry",
                "link": "/interview/frontend/javascript/write/0170_js_write_curry"
              },
              {
                "text": "JS 实现 Object.create 方法",
                "key": "/interview/frontend/javascript/write/0180_js_write_object.create",
                "link": "/interview/frontend/javascript/write/0180_js_write_object.create"
              },
              {
                "text": "JS 实现数组去重方法",
                "key": "/interview/frontend/javascript/write/0190_js_write_array_deduplication",
                "link": "/interview/frontend/javascript/write/0190_js_write_array_deduplication"
              },
              {
                "text": "JS 实现数组扁平化方法",
                "key": "/interview/frontend/javascript/write/0200_js_write_flatten_arrays",
                "link": "/interview/frontend/javascript/write/0200_js_write_flatten_arrays"
              },
              {
                "text": "JS 使用 settimeout 模拟实现 setinterval",
                "key": "/interview/frontend/javascript/write/0210_js_write_settimeout_mock_setinterval",
                "link": "/interview/frontend/javascript/write/0210_js_write_settimeout_mock_setinterval"
              },
              {
                "text": "JS 实现发布订阅模式 / EventBus（ on、emit、once、off ）",
                "key": "/interview/frontend/javascript/write/0220_js_write_eventbus",
                "link": "/interview/frontend/javascript/write/0220_js_write_eventbus"
              },
              {
                "text": "JS 实现并发可控的异步调度器",
                "key": "/interview/frontend/javascript/write/0230_js_write_asynchronous_scheduler",
                "link": "/interview/frontend/javascript/write/0230_js_write_asynchronous_scheduler"
              },
              {
                "text": "JS 实现 Promise（包含 all、race）",
                "key": "/interview/frontend/javascript/write/0240_js_write_promise",
                "link": "/interview/frontend/javascript/write/0240_js_write_promise"
              },
              {
                "text": "JS 实现浅拷贝方法",
                "key": "/interview/frontend/javascript/write/0250_js_write_lightclone",
                "link": "/interview/frontend/javascript/write/0250_js_write_lightclone"
              },
              {
                "text": "JS 实现深拷贝方法（考虑 Symbol 类型、循环引用）",
                "key": "/interview/frontend/javascript/write/0260_js_write_deepclone",
                "link": "/interview/frontend/javascript/write/0260_js_write_deepclone"
              },
              {
                "text": "JS 实现大数相加方法",
                "key": "/interview/frontend/javascript/write/0270_js_write_bignum_sum",
                "link": "/interview/frontend/javascript/write/0270_js_write_bignum_sum"
              },
              {
                "text": "JS 实现对象压平方法",
                "key": "/interview/frontend/javascript/write/0280_js_write_objectflatten",
                "link": "/interview/frontend/javascript/write/0280_js_write_objectflatten"
              },
              {
                "text": "JS 实现模板字符串解析方法",
                "key": "/interview/frontend/javascript/write/0290_js_write_stringparse",
                "link": "/interview/frontend/javascript/write/0290_js_write_stringparse"
              },
              {
                "text": "JS 实现让普通对象支持 for...of 遍历",
                "key": "/interview/frontend/javascript/write/0300_js_write_object_support_forof",
                "link": "/interview/frontend/javascript/write/0300_js_write_object_support_forof"
              }
            ]
          }
        ]
      },
      {
        "text": "React · 16",
        "itemNums": 1,
        "itemDepthNums": 16,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/react",
        "items": [
          {
            "text": "基础 · 16",
            "itemNums": 16,
            "itemDepthNums": 16,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/react/010base",
            "items": [
              {
                "text": "React 版本线",
                "key": "/interview/frontend/react/010base/010010_react_version_line",
                "link": "/interview/frontend/react/010base/010010_react_version_line"
              },
              {
                "text": "谈一谈对 React 的理解，它的理念是什么？",
                "key": "/interview/frontend/react/010base/010020_react",
                "link": "/interview/frontend/react/010base/010020_react"
              },
              {
                "text": "React的生命周期有哪些？",
                "key": "/interview/frontend/react/010base/010030_react_lifecycle",
                "link": "/interview/frontend/react/010base/010030_react_lifecycle"
              },
              {
                "text": "React 废弃了哪些生命周期？为什么？",
                "key": "/interview/frontend/react/010base/010040_what_lifecycles_have_react_abandoned",
                "link": "/interview/frontend/react/010base/010040_what_lifecycles_have_react_abandoned"
              },
              {
                "text": "React 16.X 中 props 改变后在哪个生命周期中处理",
                "key": "/interview/frontend/react/010base/010050_react16_props_in_which_lifecycle",
                "link": "/interview/frontend/react/010base/010050_react16_props_in_which_lifecycle"
              },
              {
                "text": "React 性能优化在哪个生命周期？它优化的原理是什么？",
                "key": "/interview/frontend/react/010base/010060_performance_optimization_in_which_lifecycle",
                "link": "/interview/frontend/react/010base/010060_performance_optimization_in_which_lifecycle"
              },
              {
                "text": "state 和 props 触发更新的生命周期分别有什么区别？",
                "key": "/interview/frontend/react/010base/010070_state_props_lifecycle_difference",
                "link": "/interview/frontend/react/010base/010070_state_props_lifecycle_difference"
              },
              {
                "text": "React中发起网络请求应该在哪个生命周期中进行？为什么？",
                "key": "/interview/frontend/react/010base/010080_network_request_in_which_lifecycle",
                "link": "/interview/frontend/react/010base/010080_network_request_in_which_lifecycle"
              },
              {
                "text": "React必须使用JSX吗？",
                "key": "/interview/frontend/react/010base/010090_must_react_use_jsx",
                "link": "/interview/frontend/react/010base/010090_must_react_use_jsx"
              },
              {
                "text": "为什么 React 要用 JSX？",
                "key": "/interview/frontend/react/010base/010100_why_react_uses_jsx",
                "link": "/interview/frontend/react/010base/010100_why_react_uses_jsx"
              },
              {
                "text": "为什么使用 JSX 的组件中没有看到使用 React 却需要引入 React？",
                "key": "/interview/frontend/react/010base/010110_why_should_jsx_introduce_react",
                "link": "/interview/frontend/react/010base/010110_why_should_jsx_introduce_react"
              },
              {
                "text": "谈谈对 immutable 的理解？如何应用在 react 项目中？",
                "key": "/interview/frontend/react/010base/010120_immutable",
                "link": "/interview/frontend/react/010base/010120_immutable"
              },
              {
                "text": "React Refs？应用场景？",
                "key": "/interview/frontend/react/010base/010130_react_refs",
                "link": "/interview/frontend/react/010base/010130_react_refs"
              },
              {
                "text": "React 16 解决了什么问题，增加了哪些东西",
                "key": "/interview/frontend/react/010base/010140_react16_update",
                "link": "/interview/frontend/react/010base/010140_react16_update"
              },
              {
                "text": "React 17 解决了什么问题，增加了哪些东西",
                "key": "/interview/frontend/react/010base/010150_react17_update",
                "link": "/interview/frontend/react/010base/010150_react17_update"
              },
              {
                "text": "React 18 解决了什么问题，增加了哪些东西",
                "key": "/interview/frontend/react/010base/010160_react18_update",
                "link": "/interview/frontend/react/010base/010160_react18_update"
              }
            ]
          }
        ]
      },
      {
        "text": "Vue · 106",
        "itemNums": 8,
        "itemDepthNums": 106,
        "collapsed": true,
        "collapsible": true,
        "key": "interview/frontend/vue",
        "items": [
          {
            "text": "基础 · 26",
            "itemNums": 26,
            "itemDepthNums": 26,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/010base",
            "items": [
              {
                "text": "Vue 版本线",
                "key": "/interview/frontend/vue/010base/010001_vue_version_line",
                "link": "/interview/frontend/vue/010base/010001_vue_version_line"
              },
              {
                "text": "谈一谈你对 Vue 的理解，优缺点",
                "key": "/interview/frontend/vue/010base/010010_vue",
                "link": "/interview/frontend/vue/010base/010010_vue"
              },
              {
                "text": "谈一谈对 MVVM 的理解，MVC？MVP？",
                "key": "/interview/frontend/vue/010base/010020_mvvm_mvp_mvc",
                "link": "/interview/frontend/vue/010base/010020_mvvm_mvp_mvc"
              },
              {
                "text": "什么是 SPA 应用，优缺点",
                "key": "/interview/frontend/vue/010base/010030_what_is_spa",
                "link": "/interview/frontend/vue/010base/010030_what_is_spa"
              },
              {
                "text": "为什么说 Vue 是一个渐进式框架",
                "key": "/interview/frontend/vue/010base/010040_what_is_progressive_framework",
                "link": "/interview/frontend/vue/010base/010040_what_is_progressive_framework"
              },
              {
                "text": "谈一谈你对单向数据流、双向数据流的理解，怎样理解 Vue 的单向数据流",
                "key": "/interview/frontend/vue/010base/010050_what_is_data_flow",
                "link": "/interview/frontend/vue/010base/010050_what_is_data_flow"
              },
              {
                "text": "谈一谈你对 Vue 组件化的理解",
                "key": "/interview/frontend/vue/010base/010060_vue_componentization",
                "link": "/interview/frontend/vue/010base/010060_vue_componentization"
              },
              {
                "text": "v-if 和 v-for 为什么不能连用",
                "key": "/interview/frontend/vue/010base/010070_vif_vfor_mutex",
                "link": "/interview/frontend/vue/010base/010070_vif_vfor_mutex"
              },
              {
                "text": "v-if 和 v-for 哪个优先级更高",
                "key": "/interview/frontend/vue/010base/010080_vif_vfor_priority",
                "link": "/interview/frontend/vue/010base/010080_vif_vfor_priority"
              },
              {
                "text": "谈一谈 v-if 与 v-show 的区别",
                "key": "/interview/frontend/vue/010base/010090_vif_vshow",
                "link": "/interview/frontend/vue/010base/010090_vif_vshow"
              },
              {
                "text": "v-html 会导致哪些问题",
                "key": "/interview/frontend/vue/010base/010100_vhtml",
                "link": "/interview/frontend/vue/010base/010100_vhtml"
              },
              {
                "text": "v-model 和 sync 修饰符有什么区别",
                "key": "/interview/frontend/vue/010base/010110_vmodel_sync",
                "link": "/interview/frontend/vue/010base/010110_vmodel_sync"
              },
              {
                "text": "Vue 中 OptionsAPI 组件 data 为什么必须是函数",
                "key": "/interview/frontend/vue/010base/010120_why_optionsapi_data_be_a_function",
                "link": "/interview/frontend/vue/010base/010120_why_optionsapi_data_be_a_function"
              },
              {
                "text": "介绍下 Vue 中常用的修饰符",
                "key": "/interview/frontend/vue/010base/010130_vue_modifiers",
                "link": "/interview/frontend/vue/010base/010130_vue_modifiers"
              },
              {
                "text": "Vue 中自定义指令有哪些应用场景，如何自定义指令",
                "key": "/interview/frontend/vue/010base/010140_custom_instructions",
                "link": "/interview/frontend/vue/010base/010140_custom_instructions"
              },
              {
                "text": "Vue 中自定义指令有哪些钩子，分别有什么作用",
                "key": "/interview/frontend/vue/010base/010150_custom_instructions_hook",
                "link": "/interview/frontend/vue/010base/010150_custom_instructions_hook"
              },
              {
                "text": "Vue2.x 中存在过滤器，为什么 Vue3.x 中移除了",
                "key": "/interview/frontend/vue/010base/010160_why_remove_filters_in_vue3",
                "link": "/interview/frontend/vue/010base/010160_why_remove_filters_in_vue3"
              },
              {
                "text": "谈一谈 Vue3.x 以及 Vue3.x 的一些新特性",
                "key": "/interview/frontend/vue/010base/010170_vue3_new_features",
                "link": "/interview/frontend/vue/010base/010170_vue3_new_features"
              },
              {
                "text": "Vue3.x 的性能提升主要体现在哪几个方面",
                "key": "/interview/frontend/vue/010base/010180_vue3_performance_improvement",
                "link": "/interview/frontend/vue/010base/010180_vue3_performance_improvement"
              },
              {
                "text": "Vue3.x 中 CompositionAPI 和 OptionsAPI 区别在哪",
                "key": "/interview/frontend/vue/010base/010190_vue3_componsitionapi_optionsapi",
                "link": "/interview/frontend/vue/010base/010190_vue3_componsitionapi_optionsapi"
              },
              {
                "text": "Vue3.x 中新引入的 CompositionAPI 带来的变化",
                "key": "/interview/frontend/vue/010base/010200_vue3_componsitionapi_changes_brought_about",
                "link": "/interview/frontend/vue/010base/010200_vue3_componsitionapi_changes_brought_about"
              },
              {
                "text": "Vue3.x 中 Treeshaking 特性是如何做的",
                "key": "/interview/frontend/vue/010base/010210_vue3_treeshaking",
                "link": "/interview/frontend/vue/010base/010210_vue3_treeshaking"
              },
              {
                "text": "Vue3.x 中 ref 和 reactive 区别",
                "key": "/interview/frontend/vue/010base/010220_vue3_ref_reactive",
                "link": "/interview/frontend/vue/010base/010220_vue3_ref_reactive"
              },
              {
                "text": "Vue 生命周期以及每个阶段做些什么",
                "key": "/interview/frontend/vue/010base/010230_vue_lifecycle",
                "link": "/interview/frontend/vue/010base/010230_vue_lifecycle"
              },
              {
                "text": "Vue3.x 中 setup 和 created 谁先执行？",
                "key": "/interview/frontend/vue/010base/010240_vue3_setup_created",
                "link": "/interview/frontend/vue/010base/010240_vue3_setup_created"
              },
              {
                "text": "Vue3.x setup 中为什么没有 beforeCreate 和 created",
                "key": "/interview/frontend/vue/010base/010250_vue3_no_beforecreated_and_created_for_setup",
                "link": "/interview/frontend/vue/010base/010250_vue3_no_beforecreated_and_created_for_setup"
              }
            ]
          },
          {
            "text": "数据 · 10",
            "itemNums": 10,
            "itemDepthNums": 10,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/020data",
            "items": [
              {
                "text": "谈一谈你对 Vue2.x 和 Vue3.x 响应式的理解",
                "key": "/interview/frontend/vue/020data/020010_vue2or3_reactivity",
                "link": "/interview/frontend/vue/020data/020010_vue2or3_reactivity"
              },
              {
                "text": "Vue2.x 中给 data 对象动态新增一个属性响应式还存在吗，Vue3.x 呢，为什么",
                "key": "/interview/frontend/vue/020data/020020_object_dynamic_add_atttr",
                "link": "/interview/frontend/vue/020data/020020_object_dynamic_add_atttr"
              },
              {
                "text": "如何解决 Vue2.x 中给 data 对象动态新增属性页面无响应的问题",
                "key": "/interview/frontend/vue/020data/020030_objct_dynamic_add_attr_no_response",
                "link": "/interview/frontend/vue/020data/020030_objct_dynamic_add_attr_no_response"
              },
              {
                "text": "Vue2.x 中如何检测数组的变化",
                "key": "/interview/frontend/vue/020data/020040_vue3_detect_changes_in_array",
                "link": "/interview/frontend/vue/020data/020040_vue3_detect_changes_in_array"
              },
              {
                "text": "Vue3.x 怎样处理 Proxy 只会代理对象的第一层的问题",
                "key": "/interview/frontend/vue/020data/020050_vue3_the_first_layer_of_proxy_object",
                "link": "/interview/frontend/vue/020data/020050_vue3_the_first_layer_of_proxy_object"
              },
              {
                "text": "Vue3.x 监测数组的时候可能触发多次 get/set，那么如何防止触发多次",
                "key": "/interview/frontend/vue/020data/020060_vue3_detect_array_manytimes_getset",
                "link": "/interview/frontend/vue/020data/020060_vue3_detect_array_manytimes_getset"
              },
              {
                "text": "Proxy 相比 defineProperty 的优势在哪里",
                "key": "/interview/frontend/vue/020data/020070_proxy_defineproperty",
                "link": "/interview/frontend/vue/020data/020070_proxy_defineproperty"
              },
              {
                "text": "什么是 watch，什么是 computed，区别以及使用场景",
                "key": "/interview/frontend/vue/020data/020080_vue_watch_and_computed",
                "link": "/interview/frontend/vue/020data/020080_vue_watch_and_computed"
              },
              {
                "text": "Vue 中 watch 会不会立即执行",
                "key": "/interview/frontend/vue/020data/020090_vue_watch_execute_immediately",
                "link": "/interview/frontend/vue/020data/020090_vue_watch_execute_immediately"
              },
              {
                "text": "watch 和 watchEffect 有什么差异",
                "key": "/interview/frontend/vue/020data/020100_vue_watch_watcheffect",
                "link": "/interview/frontend/vue/020data/020100_vue_watch_watcheffect"
              }
            ]
          },
          {
            "text": "组件 · 18",
            "itemNums": 18,
            "itemDepthNums": 18,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/030component",
            "items": [
              {
                "text": "Vue 中组件和插件有什么区别",
                "key": "/interview/frontend/vue/030component/030010_components_and_plugins",
                "link": "/interview/frontend/vue/030component/030010_components_and_plugins"
              },
              {
                "text": "Vue 中为什么要使用异步组件",
                "key": "/interview/frontend/vue/030component/030020_asynchronous_component",
                "link": "/interview/frontend/vue/030component/030020_asynchronous_component"
              },
              {
                "text": "Vue 中如何使用组件？如何注册全局组件？",
                "key": "/interview/frontend/vue/030component/030030_how_to_use_components",
                "link": "/interview/frontend/vue/030component/030030_how_to_use_components"
              },
              {
                "text": "Vue 组件通信有哪些方式",
                "key": "/interview/frontend/vue/030component/030040_component_communication",
                "link": "/interview/frontend/vue/030component/030040_component_communication"
              },
              {
                "text": "Vue 子组件可以直接改变父组件的数据吗",
                "key": "/interview/frontend/vue/030component/030050_child_update_parent_data",
                "link": "/interview/frontend/vue/030component/030050_child_update_parent_data"
              },
              {
                "text": "谈一谈 Vue 子组件和父组件创建和挂载顺序",
                "key": "/interview/frontend/vue/030component/030060_parent_child_create_and_mount",
                "link": "/interview/frontend/vue/030component/030060_parent_child_create_and_mount"
              },
              {
                "text": "父组件可以监听到子组件的生命周期吗？",
                "key": "/interview/frontend/vue/030component/030070_parent_listen_lifecycle_of_the_child",
                "link": "/interview/frontend/vue/030component/030070_parent_listen_lifecycle_of_the_child"
              },
              {
                "text": "为什么 Vue2.x 组件模板只能有一个根元素，Vue3.x 为什么可以多个",
                "key": "/interview/frontend/vue/030component/030080_vue_template_root_element",
                "link": "/interview/frontend/vue/030component/030080_vue_template_root_element"
              },
              {
                "text": "Vue中如何扩展一个组件",
                "key": "/interview/frontend/vue/030component/030090_vue_extend_component",
                "link": "/interview/frontend/vue/030component/030090_vue_extend_component"
              },
              {
                "text": "谈一谈 Vue2.x 中的 Mixin，为什么 Vue3.x 中不需要了",
                "key": "/interview/frontend/vue/030component/030100_vue_mixin",
                "link": "/interview/frontend/vue/030component/030100_vue_mixin"
              },
              {
                "text": "插槽和作用域插槽的区别",
                "key": "/interview/frontend/vue/030component/030110_vue_slot",
                "link": "/interview/frontend/vue/030component/030110_vue_slot"
              },
              {
                "text": "什么是无状态组件，什么是函数式组件，有什么区别及优点",
                "key": "/interview/frontend/vue/030component/030120_stateless_and_functional_component",
                "link": "/interview/frontend/vue/030component/030120_stateless_and_functional_component"
              },
              {
                "text": "谈一谈你对高阶组件的理解",
                "key": "/interview/frontend/vue/030component/030130_hoc",
                "link": "/interview/frontend/vue/030component/030130_hoc"
              },
              {
                "text": "自定义组件使用 v-model 如果想要改变事件名或者属性名应该怎么做",
                "key": "/interview/frontend/vue/030component/030140_custom_components_use_vmodel",
                "link": "/interview/frontend/vue/030component/030140_custom_components_use_vmodel"
              },
              {
                "text": "Vue 中怎么缓存当前的组件？缓存后怎么更新",
                "key": "/interview/frontend/vue/030component/030150_keepalive_cache_components",
                "link": "/interview/frontend/vue/030component/030150_keepalive_cache_components"
              },
              {
                "text": "与 keep-alive 相关的生命周期函数是什么，什么场景下会进行使用",
                "key": "/interview/frontend/vue/030component/030160_keepalive_lifecycle_function",
                "link": "/interview/frontend/vue/030component/030160_keepalive_lifecycle_function"
              },
              {
                "text": "设置 keep-alive 缓存的组件完整生命周期流程是什么",
                "key": "/interview/frontend/vue/030component/030170_keepalive_lifecycle",
                "link": "/interview/frontend/vue/030component/030170_keepalive_lifecycle"
              },
              {
                "text": "keep-alive 的实现原理是什么",
                "key": "/interview/frontend/vue/030component/030180_source_keepalive",
                "link": "/interview/frontend/vue/030component/030180_source_keepalive"
              }
            ]
          },
          {
            "text": "状态 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/040state",
            "items": [
              {
                "text": "Vuex 是什么？使用场景？如何使用？",
                "key": "/interview/frontend/vue/040state/040010_vuex",
                "link": "/interview/frontend/vue/040state/040010_vuex"
              },
              {
                "text": "Vuex 和单纯的全局对象有什么区别",
                "key": "/interview/frontend/vue/040state/040020_vuex_and_global_object",
                "link": "/interview/frontend/vue/040state/040020_vuex_and_global_object"
              },
              {
                "text": "Vuex 有什么缺点吗？你在开发过程中有遇到什么问题吗",
                "key": "/interview/frontend/vue/040state/040030_vuex_shortcoming",
                "link": "/interview/frontend/vue/040state/040030_vuex_shortcoming"
              },
              {
                "text": "Vuex 中 action 和 mutation 的区别是什么？为什么要区分它们",
                "key": "/interview/frontend/vue/040state/040040_vuex_action_mutation",
                "link": "/interview/frontend/vue/040state/040040_vuex_action_mutation"
              },
              {
                "text": "谈一谈 vuex 工作原理",
                "key": "/interview/frontend/vue/040state/040050_source_vuex",
                "link": "/interview/frontend/vue/040state/040050_source_vuex"
              },
              {
                "text": "如何实现数据持久化",
                "key": "/interview/frontend/vue/040state/040060_data_persistence",
                "link": "/interview/frontend/vue/040state/040060_data_persistence"
              },
              {
                "text": "Pinia 和 Vuex 区别是什么",
                "key": "/interview/frontend/vue/040state/040070_pinia_and_vuex",
                "link": "/interview/frontend/vue/040state/040070_pinia_and_vuex"
              }
            ]
          },
          {
            "text": "路由 · 10",
            "itemNums": 10,
            "itemDepthNums": 10,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/050router",
            "items": [
              {
                "text": "Vue Router 有几种模式，分别是什么",
                "key": "/interview/frontend/vue/050router/050010_vuerouter_mode",
                "link": "/interview/frontend/vue/050router/050010_vuerouter_mode"
              },
              {
                "text": "hash 模式和 history 模式的实现原理",
                "key": "/interview/frontend/vue/050router/050020_source_hash_and_history",
                "link": "/interview/frontend/vue/050router/050020_source_hash_and_history"
              },
              {
                "text": "谈一谈与 router 与 route 的区别",
                "key": "/interview/frontend/vue/050router/050030_router_and_route",
                "link": "/interview/frontend/vue/050router/050030_router_and_route"
              },
              {
                "text": "怎么定义动态路由？怎么获取传过来的动态参数",
                "key": "/interview/frontend/vue/050router/050040_dynamic_routing",
                "link": "/interview/frontend/vue/050router/050040_dynamic_routing"
              },
              {
                "text": "如何实现单页面多路由区域操作",
                "key": "/interview/frontend/vue/050router/050050_single_page_multi_routing_area",
                "link": "/interview/frontend/vue/050router/050050_single_page_multi_routing_area"
              },
              {
                "text": "如何实现路由懒加载",
                "key": "/interview/frontend/vue/050router/050060_routing_lazy_loading",
                "link": "/interview/frontend/vue/050router/050060_routing_lazy_loading"
              },
              {
                "text": "Vue Router 有哪几种导航守卫",
                "key": "/interview/frontend/vue/050router/050070_navigation_hook",
                "link": "/interview/frontend/vue/050router/050070_navigation_hook"
              },
              {
                "text": "路由导航守卫和 Vue 实例生命周期钩子函数的执行顺序",
                "key": "/interview/frontend/vue/050router/050080_navigation_hook_and_lifecycle_hook",
                "link": "/interview/frontend/vue/050router/050080_navigation_hook_and_lifecycle_hook"
              },
              {
                "text": "Vue Router 的完整的导航解析流程是什么",
                "key": "/interview/frontend/vue/050router/050090_navigation_parsing_process",
                "link": "/interview/frontend/vue/050router/050090_navigation_parsing_process"
              },
              {
                "text": "如果让你从零开始写一个 Vue Router，说说你的思路",
                "key": "/interview/frontend/vue/050router/050100_source_vue_router",
                "link": "/interview/frontend/vue/050router/050100_source_vue_router"
              }
            ]
          },
          {
            "text": "原理 · 20",
            "itemNums": 20,
            "itemDepthNums": 20,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/060source",
            "items": [
              {
                "text": "谈一谈双向绑定 v-model 的原理",
                "key": "/interview/frontend/vue/060source/060010_source_vmodel",
                "link": "/interview/frontend/vue/060source/060010_source_vmodel"
              },
              {
                "text": "谈一谈 Vue 中的 watch 的实现原理",
                "key": "/interview/frontend/vue/060source/060020_source_watch",
                "link": "/interview/frontend/vue/060source/060020_source_watch"
              },
              {
                "text": "谈一谈 Vue 中 computed 的实现原理",
                "key": "/interview/frontend/vue/060source/060030_source_computed",
                "link": "/interview/frontend/vue/060source/060030_source_computed"
              },
              {
                "text": "谈一谈 Vue 的异步渲染",
                "key": "/interview/frontend/vue/060source/060040_source_asynchronous_rendering",
                "link": "/interview/frontend/vue/060source/060040_source_asynchronous_rendering"
              },
              {
                "text": "谈一谈 nextTick 的作用以及实现原理",
                "key": "/interview/frontend/vue/060source/060050_source_nexttick",
                "link": "/interview/frontend/vue/060source/060050_source_nexttick"
              },
              {
                "text": "谈一谈 Vue 事件绑定原理",
                "key": "/interview/frontend/vue/060source/060060_source_event_binding",
                "link": "/interview/frontend/vue/060source/060060_source_event_binding"
              },
              {
                "text": "谈一谈 Vue complier 的实现原理",
                "key": "/interview/frontend/vue/060source/060070_source_vue_complier",
                "link": "/interview/frontend/vue/060source/060070_source_vue_complier"
              },
              {
                "text": "谈一谈从 template 到 render 处理过程",
                "key": "/interview/frontend/vue/060source/060080_source_template_to_render",
                "link": "/interview/frontend/vue/060source/060080_source_template_to_render"
              },
              {
                "text": "谈一谈 Vue 中编译器何时执行，React 有没有编译器",
                "key": "/interview/frontend/vue/060source/060090_source_when_does_the_compiler_execute",
                "link": "/interview/frontend/vue/060source/060090_source_when_does_the_compiler_execute"
              },
              {
                "text": "谈一谈你对虚拟 DOM 的理解",
                "key": "/interview/frontend/vue/060source/060100_source_vdom",
                "link": "/interview/frontend/vue/060source/060100_source_vdom"
              },
              {
                "text": "谈一谈如何从虚拟 DOM 到真实 DOM",
                "key": "/interview/frontend/vue/060source/060110_source_vdom_to_dom",
                "link": "/interview/frontend/vue/060source/060110_source_vdom_to_dom"
              },
              {
                "text": "谈一谈如何用 VNode 描述一个 DOM 结构",
                "key": "/interview/frontend/vue/060source/060120_vnode_describe_dom",
                "link": "/interview/frontend/vue/060source/060120_vnode_describe_dom"
              },
              {
                "text": "谈一谈你对 diff 算法的理解",
                "key": "/interview/frontend/vue/060source/060130_source_vue_diff",
                "link": "/interview/frontend/vue/060source/060130_source_vue_diff"
              },
              {
                "text": "谈一谈虚拟 DOM 中 key 的作用",
                "key": "/interview/frontend/vue/060source/060140_source_key_for_vdom",
                "link": "/interview/frontend/vue/060source/060140_source_key_for_vdom"
              },
              {
                "text": "谈一谈 Vue 中如何实现最小化更新，和 React 有何不同",
                "key": "/interview/frontend/vue/060source/060150_source_minimize_updates",
                "link": "/interview/frontend/vue/060source/060150_source_minimize_updates"
              },
              {
                "text": "谈一谈 new Vue 实例初始化都发生了什么",
                "key": "/interview/frontend/vue/060source/060160_source_new_vue_initialization",
                "link": "/interview/frontend/vue/060source/060160_source_new_vue_initialization"
              },
              {
                "text": "谈一谈 Vue 中组件渲染和更新过程",
                "key": "/interview/frontend/vue/060source/060170_source_rendering_and_updating",
                "link": "/interview/frontend/vue/060source/060170_source_rendering_and_updating"
              },
              {
                "text": "谈一谈 Vue 实例挂载的过程中发生了什么",
                "key": "/interview/frontend/vue/060source/060180_source_instance_mounting",
                "link": "/interview/frontend/vue/060source/060180_source_instance_mounting"
              },
              {
                "text": "谈一谈 Vue 实例挂载的过程中怎么创建响应式数据",
                "key": "/interview/frontend/vue/060source/060190_source_instance_mount_create_responsive_data",
                "link": "/interview/frontend/vue/060source/060190_source_instance_mount_create_responsive_data"
              },
              {
                "text": "谈一谈 Vue 实例挂载的过程中如何建立依赖关系",
                "key": "/interview/frontend/vue/060source/060200_source_instance_mount_establish_dependency",
                "link": "/interview/frontend/vue/060source/060200_source_instance_mount_establish_dependency"
              }
            ]
          },
          {
            "text": "实践 · 8",
            "itemNums": 8,
            "itemDepthNums": 8,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/070practice",
            "items": [
              {
                "text": "Vue 项目如何优化首屏渲染速度",
                "key": "/interview/frontend/vue/070practice/070010_optimize_first_screen_rendering",
                "link": "/interview/frontend/vue/070practice/070010_optimize_first_screen_rendering"
              },
              {
                "text": "如何解决 Vue 非工程化项目，网速慢时初始化页面闪动问题",
                "key": "/interview/frontend/vue/070practice/070020_vue_page_flashing",
                "link": "/interview/frontend/vue/070practice/070020_vue_page_flashing"
              },
              {
                "text": "Vue 大数据量渲染优化",
                "key": "/interview/frontend/vue/070practice/070030_vue_bigdata_rendering_optimization",
                "link": "/interview/frontend/vue/070practice/070030_vue_bigdata_rendering_optimization"
              },
              {
                "text": "谈一谈 Vue 的性能优化",
                "key": "/interview/frontend/vue/070practice/070040_vue_performance_optimization",
                "link": "/interview/frontend/vue/070practice/070040_vue_performance_optimization"
              },
              {
                "text": "谈一谈封装一个 Vue 弹框组件的思路",
                "key": "/interview/frontend/vue/070practice/070050_vue_model_component",
                "link": "/interview/frontend/vue/070practice/070050_vue_model_component"
              },
              {
                "text": "谈一谈 Vue 中封装请求模块的思路",
                "key": "/interview/frontend/vue/070practice/070060_vue_encapsulation_request_module",
                "link": "/interview/frontend/vue/070practice/070060_vue_encapsulation_request_module"
              },
              {
                "text": "从 0 到 1 构架一个 Vue 项目，说一下有哪些步骤、哪些重要插件、目录结构你会怎么组织",
                "key": "/interview/frontend/vue/070practice/070070_vue_project_architecture",
                "link": "/interview/frontend/vue/070practice/070070_vue_project_architecture"
              },
              {
                "text": "谈一谈 Vue 项目中实现权限管理的思路",
                "key": "/interview/frontend/vue/070practice/070080_vue_permission_management",
                "link": "/interview/frontend/vue/070practice/070080_vue_permission_management"
              }
            ]
          },
          {
            "text": "其他 · 7",
            "itemNums": 7,
            "itemDepthNums": 7,
            "collapsed": true,
            "collapsible": true,
            "key": "interview/frontend/vue/080other",
            "items": [
              {
                "text": "什么是服务端渲染（SSR）",
                "key": "/interview/frontend/vue/080other/080010_what_is_ssr",
                "link": "/interview/frontend/vue/080other/080010_what_is_ssr"
              },
              {
                "text": "为什么使用服务端渲染",
                "key": "/interview/frontend/vue/080other/080020_why_use_ssr",
                "link": "/interview/frontend/vue/080other/080020_why_use_ssr"
              },
              {
                "text": "服务端渲染需要考虑些什么",
                "key": "/interview/frontend/vue/080other/080030_what_to_consider_for_ssr",
                "link": "/interview/frontend/vue/080other/080030_what_to_consider_for_ssr"
              },
              {
                "text": "谈一谈 Vue SSR 的实现原理",
                "key": "/interview/frontend/vue/080other/080040_source_ssr",
                "link": "/interview/frontend/vue/080other/080040_source_ssr"
              },
              {
                "text": "如何让 CSS 值在当前的组件中起作用",
                "key": "/interview/frontend/vue/080other/080050_css_scoped",
                "link": "/interview/frontend/vue/080other/080050_css_scoped"
              },
              {
                "text": "CSS Scoped 的实现原理",
                "key": "/interview/frontend/vue/080other/080060_source_css_scoped",
                "link": "/interview/frontend/vue/080other/080060_source_css_scoped"
              },
              {
                "text": "CSS Scoped 是如何实现样式穿透的",
                "key": "/interview/frontend/vue/080other/080070_style_penetration_for_css_scoped",
                "link": "/interview/frontend/vue/080other/080070_style_penetration_for_css_scoped"
              }
            ]
          }
        ]
      }
    ]
  }
]